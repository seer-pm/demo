{
  "address": "0xec4fb999Db0e8cA28011D85EAD177810055b484c",
  "abi": [
    {
      "inputs": [],
      "name": "collateralToken1",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collateralToken2",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "conditionId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "encodedQuestion",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "futarchyProposalParams",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "conditionId",
          "type": "bytes32"
        },
        {
          "internalType": "contract IERC20",
          "name": "collateralToken1",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "collateralToken2",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "parentCollectionId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "parentOutcome",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "parentMarket",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "questionId",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "encodedQuestion",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_marketName",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "_outcomes",
          "type": "string[]"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "conditionId",
              "type": "bytes32"
            },
            {
              "internalType": "contract IERC20",
              "name": "collateralToken1",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "collateralToken2",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "parentCollectionId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "parentOutcome",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "parentMarket",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "questionId",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "encodedQuestion",
              "type": "string"
            },
            {
              "internalType": "contract IERC20[]",
              "name": "wrapped1155",
              "type": "address[]"
            },
            {
              "internalType": "bytes[]",
              "name": "tokenData",
              "type": "bytes[]"
            }
          ],
          "internalType": "struct FutarchyProposal.FutarchyProposalParams",
          "name": "_futarchyProposalParams",
          "type": "tuple"
        },
        {
          "internalType": "contract FutarchyRealityProxy",
          "name": "_realityProxy",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numOutcomes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "outcomes",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "parentCollectionId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "parentMarket",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "parentOutcome",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "parentWrappedOutcome",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "wrapped1155",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "questionId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "realityProxy",
      "outputs": [
        {
          "internalType": "contract FutarchyRealityProxy",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resolve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "wrappedOutcome",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "wrapped1155",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x6117420ce0ca322c84ac488e555b8412688597322a366c60e95ec9dea6033b59",
  "receipt": {
    "to": null,
    "from": "0x4EDCA105188a0783Ab3A6f09c50567D1E3F8591D",
    "contractAddress": "0xec4fb999Db0e8cA28011D85EAD177810055b484c",
    "transactionIndex": 4,
    "gasUsed": "967515",
    "logsBloom": "0x
    "blockHash": "0x890fb119ba199b5157b171c5efc57455296b765b98232ab7d432f2efb8e08a73",
    "transactionHash": "0x6117420ce0ca322c84ac488e555b8412688597322a366c60e95ec9dea6033b59",
    "logs": [],
    "blockNumber": 38042682,
    "cumulativeGasUsed": "1692934",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 3,
  "solcInputHash": "9bd5789cbaac467d0976302f58b5fb68",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"collateralToken1\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralToken2\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"conditionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"encodedQuestion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"futarchyProposalParams\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"conditionId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken1\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken2\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"parentCollectionId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"parentOutcome\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"parentMarket\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"questionId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"encodedQuestion\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_marketName\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_outcomes\",\"type\":\"string[]\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"conditionId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken1\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken2\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"parentCollectionId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"parentOutcome\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"parentMarket\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"questionId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"encodedQuestion\",\"type\":\"string\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"wrapped1155\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"tokenData\",\"type\":\"bytes[]\"}],\"internalType\":\"struct FutarchyProposal.FutarchyProposalParams\",\"name\":\"_futarchyProposalParams\",\"type\":\"tuple\"},{\"internalType\":\"contract FutarchyRealityProxy\",\"name\":\"_realityProxy\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numOutcomes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"outcomes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentCollectionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentMarket\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentOutcome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentWrappedOutcome\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"wrapped1155\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"questionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"realityProxy\",\"outputs\":[{\"internalType\":\"contract FutarchyRealityProxy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resolve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"wrappedOutcome\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"wrapped1155\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collateralToken1()\":{\"details\":\"First collateral token.\",\"returns\":{\"_0\":\"The collateral token.\"}},\"collateralToken2()\":{\"details\":\"Second collateral token.\",\"returns\":{\"_0\":\"The collateral token.\"}},\"conditionId()\":{\"details\":\"Conditional Tokens conditionId.\",\"returns\":{\"_0\":\"The condition ID.\"}},\"encodedQuestion()\":{\"details\":\"Encoded question parameters, needed to create and reopen a question.\",\"returns\":{\"_0\":\"The encoded question.\"}},\"initialize(string,string[],(bytes32,address,address,bytes32,uint256,address,bytes32,string,address[],bytes[]),address)\":{\"details\":\"Initializer.\",\"params\":{\"_futarchyProposalParams\":\"Futarchy Proposal params.\",\"_marketName\":\"The name of the proposal.\",\"_outcomes\":\"The proposal outcomes.\",\"_realityProxy\":\"Oracle contract.\"}},\"numOutcomes()\":{\"details\":\"Returns the number of outcomes.\",\"returns\":{\"_0\":\"numOutcomes The number of outcomes.\"}},\"parentCollectionId()\":{\"details\":\"Conditional Tokens parentCollectionId.\",\"returns\":{\"_0\":\"The parent collection ID.\"}},\"parentMarket()\":{\"details\":\"The parent proposal (optional). This proposal redeems to an outcome token of the parent proposal.\",\"returns\":{\"_0\":\"The parent proposal address.\"}},\"parentOutcome()\":{\"details\":\"The parent outcome (optional). The parent proposal's outcome token this proposal redeems for.\",\"returns\":{\"_0\":\"The parent outcome index.\"}},\"parentWrappedOutcome()\":{\"details\":\"Returns the wrapped1155 and the data corresponding to the parent proposal.\",\"returns\":{\"data\":\"The token data.\",\"wrapped1155\":\"The wrapped token.\"}},\"questionId()\":{\"details\":\"Conditional Tokens questionId.\",\"returns\":{\"_0\":\"the question ID.\"}},\"resolve()\":{\"details\":\"Helper function to resolve the proposal.\"},\"wrappedOutcome(uint256)\":{\"details\":\"Returns the wrapped1155 and the data corresponding to an outcome token.\",\"params\":{\"index\":\"The outcome index.\"},\"returns\":{\"data\":\"The token data.\",\"wrapped1155\":\"The wrapped token.\"}}},\"stateVariables\":{\"futarchyProposalParams\":{\"details\":\"Proposal parameters.\"},\"initialized\":{\"details\":\"Flag to initialize the proposal only once.\"},\"marketName\":{\"details\":\"The name of the proposal.\"},\"outcomes\":{\"details\":\"The proposal outcomes.\"},\"realityProxy\":{\"details\":\"Oracle contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/FutarchyProposal.sol\":\"FutarchyProposal\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"src/FutarchyProposal.sol\":{\"content\":\"/**\\n *  @authors: [@xyzseer]\\n *  @reviewers: []\\n *  @auditors: []\\n *  @bounties: []\\n *  @deployments: []\\n */\\n\\n// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\nimport \\\"./FutarchyRealityProxy.sol\\\";\\nimport {IERC20} from \\\"./Interfaces.sol\\\";\\n\\ncontract FutarchyProposal {\\n    /// @dev Flag to initialize the proposal only once.\\n    bool public initialized;\\n\\n    /// @dev Contains the information associated to the proposal.\\n    /// @param conditionId Conditional Tokens conditionId.\\n    /// @param collateralToken1 First collateral token.\\n    /// @param collateralToken2 Second collateral token.\\n    /// @param parentCollectionId Conditional Tokens parentCollectionId.\\n    /// @param parentOutcome Conditional outcome to use (optional).\\n    /// @param parentMarket Conditional proposal to use (optional).\\n    /// @param questionId Conditional Tokens questionId.\\n    /// @param encodedQuestion Encoded question, needed to create and reopen a question.\\n    /// @param wrapped1155 Outcome tokens Wrapped1155 address.\\n    /// @param data Wrapped1155 token data.\\n    struct FutarchyProposalParams {\\n        bytes32 conditionId;\\n        IERC20 collateralToken1;\\n        IERC20 collateralToken2;\\n        bytes32 parentCollectionId;\\n        uint256 parentOutcome;\\n        address parentMarket;\\n        bytes32 questionId;\\n        string encodedQuestion;\\n        IERC20[] wrapped1155;\\n        bytes[] tokenData;\\n    }\\n\\n    /// @dev The name of the proposal.\\n    string public marketName;\\n    /// @dev The proposal outcomes.\\n    string[] public outcomes;\\n    /// @dev Proposal parameters.\\n    FutarchyProposalParams public futarchyProposalParams;\\n    /// @dev Oracle contract.\\n    FutarchyRealityProxy public realityProxy;\\n\\n    /// @dev Initializer.\\n    /// @param _marketName The name of the proposal.\\n    /// @param _outcomes The proposal outcomes.\\n    /// @param _futarchyProposalParams Futarchy Proposal params.\\n    /// @param _realityProxy Oracle contract.\\n    function initialize(\\n        string memory _marketName,\\n        string[] memory _outcomes,\\n        FutarchyProposalParams memory _futarchyProposalParams,\\n        FutarchyRealityProxy _realityProxy\\n    ) external {\\n        require(!initialized, \\\"Already initialized.\\\");\\n\\n        marketName = _marketName;\\n        outcomes = _outcomes;\\n        futarchyProposalParams = _futarchyProposalParams;\\n        realityProxy = _realityProxy;\\n\\n        initialized = true;\\n    }\\n\\n    /// @dev Encoded question parameters, needed to create and reopen a question.\\n    /// @return The encoded question.\\n    function encodedQuestion() external view returns (string memory) {\\n        return futarchyProposalParams.encodedQuestion;\\n    }\\n\\n    /// @dev Conditional Tokens questionId.\\n    /// @return the question ID.\\n    function questionId() external view returns (bytes32) {\\n        return futarchyProposalParams.questionId;\\n    }\\n\\n    /// @dev Conditional Tokens conditionId.\\n    /// @return The condition ID.\\n    function conditionId() external view returns (bytes32) {\\n        return futarchyProposalParams.conditionId;\\n    }\\n\\n    /// @dev First collateral token.\\n    /// @return The collateral token.\\n    function collateralToken1() external view returns (IERC20) {\\n        return futarchyProposalParams.collateralToken1;\\n    }\\n\\n    /// @dev Second collateral token.\\n    /// @return The collateral token.\\n    function collateralToken2() external view returns (IERC20) {\\n        return futarchyProposalParams.collateralToken2;\\n    }\\n\\n    /// @dev Conditional Tokens parentCollectionId.\\n    /// @return The parent collection ID.\\n    function parentCollectionId() external view returns (bytes32) {\\n        return futarchyProposalParams.parentCollectionId;\\n    }\\n\\n    /// @dev The parent proposal (optional). This proposal redeems to an outcome token of the parent proposal.\\n    /// @return The parent proposal address.\\n    function parentMarket() external view returns (address) {\\n        return futarchyProposalParams.parentMarket;\\n    }\\n\\n    /// @dev The parent outcome (optional). The parent proposal's outcome token this proposal redeems for.\\n    /// @return The parent outcome index.\\n    function parentOutcome() external view returns (uint256) {\\n        return futarchyProposalParams.parentOutcome;\\n    }\\n\\n    /// @dev Returns the wrapped1155 and the data corresponding to an outcome token.\\n    /// @param index The outcome index.\\n    /// @return wrapped1155 The wrapped token.\\n    /// @return data The token data.\\n    function wrappedOutcome(uint256 index) external view returns (IERC20 wrapped1155, bytes memory data) {\\n        return (futarchyProposalParams.wrapped1155[index], futarchyProposalParams.tokenData[index]);\\n    }\\n\\n    /// @dev Returns the wrapped1155 and the data corresponding to the parent proposal.\\n    /// @return wrapped1155 The wrapped token.\\n    /// @return data The token data.\\n    function parentWrappedOutcome() external view returns (IERC20 wrapped1155, bytes memory data) {\\n        if (futarchyProposalParams.parentMarket != address(0)) {\\n            (wrapped1155, data) = FutarchyProposal(futarchyProposalParams.parentMarket).wrappedOutcome(\\n                futarchyProposalParams.parentOutcome\\n            );\\n        }\\n    }\\n\\n    /// @dev Returns the number of outcomes.\\n    /// @return numOutcomes The number of outcomes.\\n    function numOutcomes() external view returns (uint256) {\\n        return outcomes.length;\\n    }\\n\\n    /// @dev Helper function to resolve the proposal.\\n    function resolve() external {\\n        realityProxy.resolve(this);\\n    }\\n}\\n\",\"keccak256\":\"0x9e364091f59bc20c41d6d93aa16ff54a7d29eaa1d7b23b56c330efa3e0cf322b\",\"license\":\"MIT\"},\"src/FutarchyRealityProxy.sol\":{\"content\":\"/**\\n *  @authors: [@xyzseer]\\n *  @reviewers: []\\n *  @auditors: []\\n *  @bounties: []\\n *  @deployments: []\\n */\\n\\n// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\nimport \\\"./FutarchyProposal.sol\\\";\\nimport {IConditionalTokens, IRealityETH_v3_0} from \\\"./Interfaces.sol\\\";\\n\\ncontract FutarchyRealityProxy {\\n    /// @dev Conditional Tokens contract.\\n    IConditionalTokens public immutable conditionalTokens;\\n    /// @dev Reality.eth contract.\\n    IRealityETH_v3_0 public immutable realitio;\\n\\n    /// @dev Constructor.\\n    /// @param _conditionalTokens Conditional Tokens contract address.\\n    /// @param _realitio Reality.eth contract address.\\n    constructor(IConditionalTokens _conditionalTokens, IRealityETH_v3_0 _realitio) {\\n        conditionalTokens = _conditionalTokens;\\n        realitio = _realitio;\\n    }\\n\\n    /// @dev Resolves the specified proposal.\\n    /// @param proposal Proposal to resolve. UNTRUSTED.\\n    function resolve(FutarchyProposal proposal) external {\\n        bytes32 questionId = proposal.questionId();\\n\\n        uint256 answer = uint256(realitio.resultForOnceSettled(questionId));\\n        uint256[] memory payouts = new uint256[](2);\\n\\n        // FutarchyFactory prepares the condition with two outcomes (YES / NO)\\n        if (answer == 0) {\\n            // accept proposal if result is YES\\n            payouts[0] = 1;\\n        } else {\\n            // reject proposal if result is NO or INVALID\\n            payouts[1] = 1;\\n        }\\n\\n        conditionalTokens.reportPayouts(questionId, payouts);\\n    }\\n}\\n\",\"keccak256\":\"0x7b1ab8a8c07d4f0f24f8a39bb364f59853bf9fca5e4c50e67177a9c8b4ad7eb3\",\"license\":\"MIT\"},\"src/Interfaces.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\ninterface IERC20 {\\n    function symbol() external view returns (string memory);\\n\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    function balanceOf(address owner) external returns (uint256);\\n\\n    function totalSupply() external view returns (uint256);\\n}\\n\\n// https://github.com/RealityETH/reality-eth-monorepo/blob/main/packages/contracts/flat/RealityETH-3.0.sol\\ninterface IRealityETH_v3_0 {\\n    function askQuestionWithMinBond(\\n        uint256 template_id,\\n        string memory question,\\n        address arbitrator,\\n        uint32 timeout,\\n        uint32 opening_ts,\\n        uint256 nonce,\\n        uint256 min_bond\\n    ) external payable returns (bytes32);\\n\\n    function resultForOnceSettled(bytes32 question_id) external view returns (bytes32);\\n\\n    function getContentHash(bytes32 question_id) external view returns (bytes32);\\n\\n    function getTimeout(bytes32 question_id) external view returns (uint32);\\n\\n    function submitAnswer(bytes32 question_id, bytes32 answer, uint256 max_previous) external payable;\\n}\\n\\ninterface IConditionalTokens {\\n    function payoutNumerators(bytes32 conditionId, uint256 index) external view returns (uint256);\\n\\n    function payoutDenominator(bytes32 conditionId) external view returns (uint256);\\n\\n    function prepareCondition(address oracle, bytes32 questionId, uint256 outcomeSlotCount) external;\\n\\n    function reportPayouts(bytes32 questionId, uint256[] calldata payouts) external;\\n\\n    function splitPosition(\\n        /*IERC20*/\\n        address collateralToken,\\n        bytes32 parentCollectionId,\\n        bytes32 conditionId,\\n        uint256[] calldata partition,\\n        uint256 amount\\n    ) external;\\n\\n    function mergePositions(\\n        /*IERC20*/\\n        address collateralToken,\\n        bytes32 parentCollectionId,\\n        bytes32 conditionId,\\n        uint256[] calldata partition,\\n        uint256 amount\\n    ) external;\\n\\n    function redeemPositions(\\n        /*IERC20*/\\n        address collateralToken,\\n        bytes32 parentCollectionId,\\n        bytes32 conditionId,\\n        uint256[] calldata indexSets\\n    ) external;\\n\\n    function getConditionId(\\n        address oracle,\\n        bytes32 questionId,\\n        uint256 outcomeSlotCount\\n    ) external pure returns (bytes32);\\n\\n    function getCollectionId(\\n        bytes32 parentCollectionId,\\n        bytes32 conditionId,\\n        uint256 indexSet\\n    ) external view returns (bytes32);\\n\\n    function getPositionId(address collateralToken, bytes32 collectionId) external pure returns (uint256);\\n\\n    function getOutcomeSlotCount(bytes32 conditionId) external view returns (uint256);\\n\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\\n\\n    function balanceOf(address owner, uint256 id) external view returns (uint256);\\n}\\n\\ninterface IWrapped1155Factory {\\n    function requireWrapped1155(\\n        /*IERC1155*/\\n        address multiToken,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external /*Wrapped1155*/ returns (IERC20);\\n\\n    function unwrap(\\n        /*IERC1155*/\\n        address multiToken,\\n        uint256 tokenId,\\n        uint256 amount,\\n        address recipient,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x8892a345d504bf2d565948b1ec7a5302cf45024e6a0ea3ac810d5eb0b2827d77\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611089806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f65760003560e01c806366b329161161009257806366b32916146101b95780636fc4eddd146101d55780638767d64e146101dd578063a5e4b018146101e5578063b06a5c52146101fa578063c4a091d214610202578063d03ecc6414610213578063e6bfd26a14610224578063eed2a1471461022c57600080fd5b80630d0e932b146100fb578063158ef93e1461011257806318a988a81461012f5780632810e1d6146101505780632ddc7de71461015a5780632e0cccbb146101625780632ff8d5041461017557806344bea37e146101a05780634d7b0900146101a8575b600080fd5b6007545b6040519081526020015b60405180910390f35b60005461011f9060ff1681565b6040519015158152602001610109565b61014261013d366004610922565b61023f565b60405161010992919061098b565b610158610324565b005b6003546100ff565b610158610170366004610cf0565b610383565b600d54610188906001600160a01b031681565b6040516001600160a01b039091168152602001610109565b6006546100ff565b6004546001600160a01b0316610188565b6101c16104e1565b604051610109989796959493929190610df7565b6101426105a4565b6002546100ff565b6101ed61063f565b6040516101099190610e56565b6009546100ff565b6005546001600160a01b0316610188565b6008546001600160a01b0316610188565b6101ed6106d4565b6101ed61023a366004610922565b610762565b600060606003600801838154811061025957610259610e69565b600091825260209091200154600c80546001600160a01b03909216918590811061028557610285610e69565b9060005260206000200180805461029b90610e7f565b80601f01602080910402602001604051908101604052809291908181526020018280546102c790610e7f565b80156103145780601f106102e957610100808354040283529160200191610314565b820191906000526020600020905b8154815290600101906020018083116102f757829003601f168201915b5050505050905091509150915091565b600d546040516355ea6c4760e01b81523060048201526001600160a01b03909116906355ea6c4790602401600060405180830381600087803b15801561036957600080fd5b505af115801561037d573d6000803e3d6000fd5b50505050565b60005460ff16156103d15760405162461bcd60e51b815260206004820152601460248201527320b63932b0b23c9034b734ba34b0b634bd32b21760611b604482015260640160405180910390fd5b60016103dd8582610f08565b5082516103f190600290602086019061078d565b50815160039081556020830151600480546001600160a01b039283166001600160a01b0319918216179091556040850151600580549184169183169190911790556060850151600655608085015160075560a08501516008805491909316911617905560c083015160095560e0830151839190600a906104719082610f08565b50610100820151805161048e9160088401916020909101906107e3565b5061012082015180516104ab916009840191602090910190610844565b5050600d80546001600160a01b0319166001600160a01b03939093169290921790915550506000805460ff191660011790555050565b60038054600454600554600654600754600854600954600a805497986001600160a01b039788169896881697959694959093169391929161052190610e7f565b80601f016020809104026020016040519081016040528092919081815260200182805461054d90610e7f565b801561059a5780601f1061056f5761010080835404028352916020019161059a565b820191906000526020600020905b81548152906001019060200180831161057d57829003601f168201915b5050505050905088565b6008546000906060906001600160a01b03161561063b57600854600754604051630315311560e31b81526001600160a01b03909216916318a988a8916105f09160040190815260200190565b600060405180830381865afa15801561060d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106359190810190610fc7565b90925090505b9091565b60606003600701805461065190610e7f565b80601f016020809104026020016040519081016040528092919081815260200182805461067d90610e7f565b80156106ca5780601f1061069f576101008083540402835291602001916106ca565b820191906000526020600020905b8154815290600101906020018083116106ad57829003601f168201915b5050505050905090565b600180546106e190610e7f565b80601f016020809104026020016040519081016040528092919081815260200182805461070d90610e7f565b801561075a5780601f1061072f5761010080835404028352916020019161075a565b820191906000526020600020905b81548152906001019060200180831161073d57829003601f168201915b505050505081565b6002818154811061077257600080fd5b9060005260206000200160009150905080546106e190610e7f565b8280548282559060005260206000209081019282156107d3579160200282015b828111156107d357825182906107c39082610f08565b50916020019190600101906107ad565b506107df929150610896565b5090565b828054828255906000526020600020908101928215610838579160200282015b8281111561083857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610803565b506107df9291506108b3565b82805482825590600052602060002090810192821561088a579160200282015b8281111561088a578251829061087a9082610f08565b5091602001919060010190610864565b506107df9291506108c8565b808211156107df5760006108aa82826108e5565b50600101610896565b5b808211156107df57600081556001016108b4565b808211156107df5760006108dc82826108e5565b506001016108c8565b5080546108f190610e7f565b6000825580601f10610901575050565b601f01602090049060005260206000209081019061091f91906108b3565b50565b60006020828403121561093457600080fd5b5035919050565b60005b8381101561095657818101518382015260200161093e565b50506000910152565b6000815180845261097781602086016020860161093b565b601f01601f19169290920160200192915050565b6001600160a01b03831681526040602082018190526000906109af9083018461095f565b949350505050565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b03811182821017156109f0576109f06109b7565b60405290565b604051601f8201601f191681016001600160401b0381118282101715610a1e57610a1e6109b7565b604052919050565b60006001600160401b03821115610a3f57610a3f6109b7565b50601f01601f191660200190565b6000610a60610a5b84610a26565b6109f6565b9050828152838383011115610a7457600080fd5b828260208301376000602084830101529392505050565b600082601f830112610a9c57600080fd5b610aab83833560208501610a4d565b9392505050565b60006001600160401b03821115610acb57610acb6109b7565b5060051b60200190565b6001600160a01b038116811461091f57600080fd5b8035610af581610ad5565b919050565b600082601f830112610b0b57600080fd5b81356020610b1b610a5b83610ab2565b82815260059290921b84018101918181019086841115610b3a57600080fd5b8286015b84811015610b5e578035610b5181610ad5565b8352918301918301610b3e565b509695505050505050565b600082601f830112610b7a57600080fd5b81356020610b8a610a5b83610ab2565b82815260059290921b84018101918181019086841115610ba957600080fd5b8286015b84811015610b5e5780356001600160401b03811115610bcc5760008081fd5b8701603f81018913610bde5760008081fd5b610bef898683013560408401610a4d565b845250918301918301610bad565b60006101408284031215610c1057600080fd5b610c186109cd565b905081358152610c2a60208301610aea565b6020820152610c3b60408301610aea565b60408201526060820135606082015260808201356080820152610c6060a08301610aea565b60a082015260c082013560c082015260e08201356001600160401b0380821115610c8957600080fd5b610c9585838601610a8b565b60e084015261010091508184013581811115610cb057600080fd5b610cbc86828701610afa565b838501525061012091508184013581811115610cd757600080fd5b610ce386828701610b69565b8385015250505092915050565b60008060008060808587031215610d0657600080fd5b84356001600160401b0380821115610d1d57600080fd5b610d2988838901610a8b565b9550602091508187013581811115610d4057600080fd5b8701601f81018913610d5157600080fd5b8035610d5f610a5b82610ab2565b81815260059190911b8201840190848101908b831115610d7e57600080fd5b8584015b83811015610db657803586811115610d9a5760008081fd5b610da88e8983890101610a8b565b845250918601918601610d82565b5097505050506040870135915080821115610dd057600080fd5b50610ddd87828801610bfd565b925050610dec60608601610aea565b905092959194509250565b8881526001600160a01b03888116602083015287811660408301526060820187905260808201869052841660a082015260c0810183905261010060e08201819052600090610e478382018561095f565b9b9a5050505050505050505050565b602081526000610aab602083018461095f565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680610e9357607f821691505b602082108103610eb357634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610f0357600081815260208120601f850160051c81016020861015610ee05750805b601f850160051c820191505b81811015610eff57828155600101610eec565b5050505b505050565b81516001600160401b03811115610f2157610f216109b7565b610f3581610f2f8454610e7f565b84610eb9565b602080601f831160018114610f6a5760008415610f525750858301515b600019600386901b1c1916600185901b178555610eff565b600085815260208120601f198616915b82811015610f9957888601518255948401946001909101908401610f7a565b5085821015610fb75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008060408385031215610fda57600080fd5b8251610fe581610ad5565b60208401519092506001600160401b0381111561100157600080fd5b8301601f8101851361101257600080fd5b8051611020610a5b82610a26565b81815286602083850101111561103557600080fd5b61104682602083016020860161093b565b809350505050925092905056fea264697066735822122076efcac34e5409c825af3c273e4dc1b07164498bb62fa6b443d0ac0e2da63d0d64736f6c63430008140033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "collateralToken1()": {
        "details": "First collateral token.",
        "returns": {
          "_0": "The collateral token."
        }
      },
      "collateralToken2()": {
        "details": "Second collateral token.",
        "returns": {
          "_0": "The collateral token."
        }
      },
      "conditionId()": {
        "details": "Conditional Tokens conditionId.",
        "returns": {
          "_0": "The condition ID."
        }
      },
      "encodedQuestion()": {
        "details": "Encoded question parameters, needed to create and reopen a question.",
        "returns": {
          "_0": "The encoded question."
        }
      },
      "initialize(string,string[],(bytes32,address,address,bytes32,uint256,address,bytes32,string,address[],bytes[]),address)": {
        "details": "Initializer.",
        "params": {
          "_futarchyProposalParams": "Futarchy Proposal params.",
          "_marketName": "The name of the proposal.",
          "_outcomes": "The proposal outcomes.",
          "_realityProxy": "Oracle contract."
        }
      },
      "numOutcomes()": {
        "details": "Returns the number of outcomes.",
        "returns": {
          "_0": "numOutcomes The number of outcomes."
        }
      },
      "parentCollectionId()": {
        "details": "Conditional Tokens parentCollectionId.",
        "returns": {
          "_0": "The parent collection ID."
        }
      },
      "parentMarket()": {
        "details": "The parent proposal (optional). This proposal redeems to an outcome token of the parent proposal.",
        "returns": {
          "_0": "The parent proposal address."
        }
      },
      "parentOutcome()": {
        "details": "The parent outcome (optional). The parent proposal's outcome token this proposal redeems for.",
        "returns": {
          "_0": "The parent outcome index."
        }
      },
      "parentWrappedOutcome()": {
        "details": "Returns the wrapped1155 and the data corresponding to the parent proposal.",
        "returns": {
          "data": "The token data.",
          "wrapped1155": "The wrapped token."
        }
      },
      "questionId()": {
        "details": "Conditional Tokens questionId.",
        "returns": {
          "_0": "the question ID."
        }
      },
      "resolve()": {
        "details": "Helper function to resolve the proposal."
      },
      "wrappedOutcome(uint256)": {
        "details": "Returns the wrapped1155 and the data corresponding to an outcome token.",
        "params": {
          "index": "The outcome index."
        },
        "returns": {
          "data": "The token data.",
          "wrapped1155": "The wrapped token."
        }
      }
    },
    "stateVariables": {
      "futarchyProposalParams": {
        "details": "Proposal parameters."
      },
      "initialized": {
        "details": "Flag to initialize the proposal only once."
      },
      "marketName": {
        "details": "The name of the proposal."
      },
      "outcomes": {
        "details": "The proposal outcomes."
      },
      "realityProxy": {
        "details": "Oracle contract."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1161,
        "contract": "src/FutarchyProposal.sol:FutarchyProposal",
        "label": "initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 1191,
        "contract": "src/FutarchyProposal.sol:FutarchyProposal",
        "label": "marketName",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 1195,
        "contract": "src/FutarchyProposal.sol:FutarchyProposal",
        "label": "outcomes",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 1199,
        "contract": "src/FutarchyProposal.sol:FutarchyProposal",
        "label": "futarchyProposalParams",
        "offset": 0,
        "slot": "3",
        "type": "t_struct(FutarchyProposalParams)1188_storage"
      },
      {
        "astId": 1203,
        "contract": "src/FutarchyProposal.sol:FutarchyProposal",
        "label": "realityProxy",
        "offset": 0,
        "slot": "13",
        "type": "t_contract(FutarchyRealityProxy)1497"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes_storage)dyn_storage": {
        "base": "t_bytes_storage",
        "encoding": "dynamic_array",
        "label": "bytes[]",
        "numberOfBytes": "32"
      },
      "t_array(t_contract(IERC20)2633)dyn_storage": {
        "base": "t_contract(IERC20)2633",
        "encoding": "dynamic_array",
        "label": "contract IERC20[]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(FutarchyRealityProxy)1497": {
        "encoding": "inplace",
        "label": "contract FutarchyRealityProxy",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)2633": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(FutarchyProposalParams)1188_storage": {
        "encoding": "inplace",
        "label": "struct FutarchyProposal.FutarchyProposalParams",
        "members": [
          {
            "astId": 1164,
            "contract": "src/FutarchyProposal.sol:FutarchyProposal",
            "label": "conditionId",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 1167,
            "contract": "src/FutarchyProposal.sol:FutarchyProposal",
            "label": "collateralToken1",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)2633"
          },
          {
            "astId": 1170,
            "contract": "src/FutarchyProposal.sol:FutarchyProposal",
            "label": "collateralToken2",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IERC20)2633"
          },
          {
            "astId": 1172,
            "contract": "src/FutarchyProposal.sol:FutarchyProposal",
            "label": "parentCollectionId",
            "offset": 0,
            "slot": "3",
            "type": "t_bytes32"
          },
          {
            "astId": 1174,
            "contract": "src/FutarchyProposal.sol:FutarchyProposal",
            "label": "parentOutcome",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 1176,
            "contract": "src/FutarchyProposal.sol:FutarchyProposal",
            "label": "parentMarket",
            "offset": 0,
            "slot": "5",
            "type": "t_address"
          },
          {
            "astId": 1178,
            "contract": "src/FutarchyProposal.sol:FutarchyProposal",
            "label": "questionId",
            "offset": 0,
            "slot": "6",
            "type": "t_bytes32"
          },
          {
            "astId": 1180,
            "contract": "src/FutarchyProposal.sol:FutarchyProposal",
            "label": "encodedQuestion",
            "offset": 0,
            "slot": "7",
            "type": "t_string_storage"
          },
          {
            "astId": 1184,
            "contract": "src/FutarchyProposal.sol:FutarchyProposal",
            "label": "wrapped1155",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_contract(IERC20)2633)dyn_storage"
          },
          {
            "astId": 1187,
            "contract": "src/FutarchyProposal.sol:FutarchyProposal",
            "label": "tokenData",
            "offset": 0,
            "slot": "9",
            "type": "t_array(t_bytes_storage)dyn_storage"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}