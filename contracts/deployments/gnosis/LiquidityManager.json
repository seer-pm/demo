{
  "address": "0x031778c7A1c08787aba7a2e0B5149fEb5DECabD7",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_sDAI",
          "type": "address"
        },
        {
          "internalType": "contract IConditionalTokens",
          "name": "_conditionalTokens",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_routerAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_uniswapRouterAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "contract IMarket",
          "name": "market",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "liquidityAmount",
          "type": "uint256"
        }
      ],
      "name": "addIndexLiquidityToMarket",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "conditionalTokens",
      "outputs": [
        {
          "internalType": "contract IConditionalTokens",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "routerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sDAI",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapRouterAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xa130d025c94660e6d347cf0092c2891b700acc2c78a8c26043a66b56931f21e9",
  "receipt": {
    "to": null,
    "from": "0xB972788fD94972D673eB3aF068df1Dfe11A2ec37",
    "contractAddress": "0x031778c7A1c08787aba7a2e0B5149fEb5DECabD7",
    "transactionIndex": 1,
    "gasUsed": "712537",
    "logsBloom": "0x
    "blockHash": "0xc945f04610c67b73859f1c784ae2d14d77ab45ef5323bac971ddb654ad1fed86",
    "transactionHash": "0xa130d025c94660e6d347cf0092c2891b700acc2c78a8c26043a66b56931f21e9",
    "logs": [],
    "blockNumber": 37438624,
    "cumulativeGasUsed": "1000795",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xaf204776c7245bF4147c2612BF6e5972Ee483701",
    "0xCeAfDD6bc0bEF976fdCd1112955828E00543c0Ce",
    "0xeC9048b59b3467415b1a38F63416407eA0c70fB8",
    "0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506"
  ],
  "numDeployments": 1,
  "solcInputHash": "2ad71b607649c0d194416c04c628c823",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_sDAI\",\"type\":\"address\"},{\"internalType\":\"contract IConditionalTokens\",\"name\":\"_conditionalTokens\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_routerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniswapRouterAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"contract IMarket\",\"name\":\"market\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidityAmount\",\"type\":\"uint256\"}],\"name\":\"addIndexLiquidityToMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"conditionalTokens\",\"outputs\":[{\"internalType\":\"contract IConditionalTokens\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"routerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sDAI\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapRouterAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/trade/LiquidityManager.sol\":\"LiquidityManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"src/trade/Interfaces.sol\":{\"content\":\"\\r\\n// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.20;\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\n\\r\\ninterface IUniswapV2Router {\\r\\n    function addLiquidity(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint256 amountADesired,\\r\\n        uint256 amountBDesired,\\r\\n        uint256 amountAMin,\\r\\n        uint256 amountBMin,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external returns (uint256 amountA, uint256 amountB, uint256 liquidity);\\r\\n}\\r\\n\\r\\ninterface IRouter {\\r\\n    function splitPosition(\\r\\n        address collateral, \\r\\n        address market, \\r\\n        uint256 amount\\r\\n    ) external;\\r\\n}\\r\\n\\r\\ninterface IMarket {\\r\\n    /// @dev Market initialization parameters\\r\\n    struct RealityParams {\\r\\n        bytes32[] questionsIds;\\r\\n        uint256 templateId;\\r\\n        string[] encodedQuestions;\\r\\n    }\\r\\n\\r\\n    /// @dev Conditional Tokens parameters\\r\\n    struct ConditionalTokensParams {\\r\\n        bytes32 conditionId;\\r\\n        bytes32 parentCollectionId;\\r\\n        uint256 parentOutcome;\\r\\n        address parentMarket;\\r\\n        bytes32 questionId;\\r\\n        IERC20[] wrapped1155;\\r\\n        bytes[] data;\\r\\n    }\\r\\n\\r\\n    /// @dev Initialize the market\\r\\n    function initialize(\\r\\n        string memory _marketName,\\r\\n        string[] memory _outcomes,\\r\\n        uint256 _lowerBound,\\r\\n        uint256 _upperBound,\\r\\n        ConditionalTokensParams memory _conditionalTokensParams,\\r\\n        RealityParams memory _realityParams,\\r\\n        address _realityProxy\\r\\n    ) external;\\r\\n\\r\\n    /// @dev Getter for template ID\\r\\n    function templateId() external view returns (uint256);\\r\\n\\r\\n    /// @dev Getter for questions IDs\\r\\n    function questionsIds() external view returns (bytes32[] memory);\\r\\n\\r\\n    /// @dev Getter for encoded questions\\r\\n    function encodedQuestions(uint256 index) external view returns (string memory);\\r\\n\\r\\n    /// @dev Getter for question ID\\r\\n    function questionId() external view returns (bytes32);\\r\\n\\r\\n    /// @dev Getter for condition ID\\r\\n    function conditionId() external view returns (bytes32);\\r\\n\\r\\n    /// @dev Getter for parent collection ID\\r\\n    function parentCollectionId() external view returns (bytes32);\\r\\n\\r\\n    /// @dev Getter for parent market\\r\\n    function parentMarket() external view returns (address);\\r\\n\\r\\n    /// @dev Getter for parent outcome\\r\\n    function parentOutcome() external view returns (uint256);\\r\\n\\r\\n    /// @dev Getter for wrapped outcome\\r\\n    function wrappedOutcome(uint256 index) external view returns (IERC20 wrapped1155, bytes memory data);\\r\\n\\r\\n    /// @dev Getter for parent wrapped outcome\\r\\n    function parentWrappedOutcome() external view returns (IERC20 wrapped1155, bytes memory data);\\r\\n\\r\\n    /// @dev Getter for number of outcomes\\r\\n    function numOutcomes() external view returns (uint256);\\r\\n\\r\\n    /// @dev Resolve the market\\r\\n    function resolve() external;\\r\\n\\r\\n    /// @dev Public getters for market properties\\r\\n    function marketName() external view returns (string memory);\\r\\n    function outcomes(uint256 index) external view returns (string memory);\\r\\n    function lowerBound() external view returns (uint256);\\r\\n    function upperBound() external view returns (uint256);\\r\\n    function initialized() external view returns (bool);\\r\\n}\\r\\n\\r\\ninterface IConditionalTokens {\\r\\n    function payoutNumerators(bytes32 conditionId, uint256 index) external view returns (uint256);\\r\\n\\r\\n    function payoutDenominator(bytes32 conditionId) external view returns (uint256);\\r\\n\\r\\n    function prepareCondition(address oracle, bytes32 questionId, uint256 outcomeSlotCount) external;\\r\\n\\r\\n    function reportPayouts(bytes32 questionId, uint256[] calldata payouts) external;\\r\\n\\r\\n    function splitPosition(\\r\\n        /*IERC20*/\\r\\n        address collateralToken,\\r\\n        bytes32 parentCollectionId,\\r\\n        bytes32 conditionId,\\r\\n        uint256[] calldata partition,\\r\\n        uint256 amount\\r\\n    ) external;\\r\\n\\r\\n    function mergePositions(\\r\\n        /*IERC20*/\\r\\n        address collateralToken,\\r\\n        bytes32 parentCollectionId,\\r\\n        bytes32 conditionId,\\r\\n        uint256[] calldata partition,\\r\\n        uint256 amount\\r\\n    ) external;\\r\\n\\r\\n    function redeemPositions(\\r\\n        /*IERC20*/\\r\\n        address collateralToken,\\r\\n        bytes32 parentCollectionId,\\r\\n        bytes32 conditionId,\\r\\n        uint256[] calldata indexSets\\r\\n    ) external;\\r\\n\\r\\n    function getConditionId(\\r\\n        address oracle,\\r\\n        bytes32 questionId,\\r\\n        uint256 outcomeSlotCount\\r\\n    ) external pure returns (bytes32);\\r\\n\\r\\n    function getCollectionId(\\r\\n        bytes32 parentCollectionId,\\r\\n        bytes32 conditionId,\\r\\n        uint256 indexSet\\r\\n    ) external view returns (bytes32);\\r\\n\\r\\n    function getPositionId(address collateralToken, bytes32 collectionId) external pure returns (uint256);\\r\\n\\r\\n    function getOutcomeSlotCount(bytes32 conditionId) external view returns (uint256);\\r\\n\\r\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\\r\\n\\r\\n    function balanceOf(address owner, uint256 id) external view returns (uint256);\\r\\n}\",\"keccak256\":\"0xa72922b34e7b9ca36f9c6d8698d82de906ba6cf5c417a2c71ec4dbe947b59d8a\",\"license\":\"MIT\"},\"src/trade/LiquidityManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.20;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"./Interfaces.sol\\\";\\r\\n\\r\\ncontract LiquidityManager {\\r\\n    \\r\\n    IERC20 public immutable sDAI;\\r\\n    IConditionalTokens public immutable conditionalTokens;\\r\\n    address public immutable routerAddress;\\r\\n    address public immutable uniswapRouterAddress;\\r\\n\\r\\n    // Constructor to initialize immutable variables\\r\\n    constructor(\\r\\n        IERC20 _sDAI,\\r\\n        IConditionalTokens _conditionalTokens,\\r\\n        address _routerAddress,\\r\\n        address _uniswapRouterAddress\\r\\n    ) {\\r\\n        sDAI = _sDAI;\\r\\n        conditionalTokens = _conditionalTokens;\\r\\n        routerAddress = _routerAddress;\\r\\n        uniswapRouterAddress = _uniswapRouterAddress;\\r\\n    }\\r\\n\\r\\n    function addIndexLiquidityToMarket(\\r\\n        IMarket market,\\r\\n        uint256 liquidityAmount\\r\\n    ) external {\\r\\n        address parentMarket = market.parentMarket();\\r\\n        bool isConditionalMarket = parentMarket != address(0);\\r\\n        (IERC20 wrapped1155,) = market.parentWrappedOutcome();\\r\\n        IERC20 collateral = isConditionalMarket ? wrapped1155 : sDAI;\\r\\n        bytes32 conditionId = market.conditionId();\\r\\n        uint256 outcomeSlotCount = conditionalTokens.getOutcomeSlotCount(conditionId);\\r\\n        sDAI.transferFrom(msg.sender, address(this), liquidityAmount * 2 * (outcomeSlotCount-1));\\r\\n\\r\\n        for(uint256 i; i<outcomeSlotCount-1; i++){\\r\\n            \\r\\n            (IERC20 outcomeToken,) = market.wrappedOutcome(i);\\r\\n            // Handle conditional market if needed\\r\\n            if (isConditionalMarket) {\\r\\n                sDAI.approve(routerAddress, liquidityAmount * 2);\\r\\n                IRouter(routerAddress).splitPosition(address(sDAI), parentMarket, liquidityAmount * 2);\\r\\n            }\\r\\n\\r\\n            // Split position for the market\\r\\n            collateral.approve(routerAddress, liquidityAmount);\\r\\n            IRouter(routerAddress).splitPosition(address(sDAI), address(market), liquidityAmount);\\r\\n\\r\\n            // Approve tokens for Uniswap router\\r\\n            outcomeToken.approve(uniswapRouterAddress,liquidityAmount);\\r\\n            collateral.approve(uniswapRouterAddress,liquidityAmount);\\r\\n            \\r\\n            // Add liquidity\\r\\n            IUniswapV2Router(uniswapRouterAddress).addLiquidity(\\r\\n                address(outcomeToken),\\r\\n                address(collateral),\\r\\n                liquidityAmount,\\r\\n                liquidityAmount,\\r\\n                liquidityAmount,\\r\\n                liquidityAmount,\\r\\n                msg.sender,\\r\\n                block.timestamp + 1 hours\\r\\n            );\\r\\n        }\\r\\n       \\r\\n    }\\r\\n}\",\"keccak256\":\"0xfb4cef2e4913fd092be4deb1ba98c9d16e801dd59cc79886085b6ccb413122bf\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x61010060405234801561001157600080fd5b50604051610d44380380610d448339810160408190526100309161006a565b6001600160a01b0393841660805291831660a052821660c0521660e0526100c9565b6001600160a01b038116811461006757600080fd5b50565b6000806000806080858703121561008057600080fd5b845161008b81610052565b602086015190945061009c81610052565b60408601519093506100ad81610052565b60608601519092506100be81610052565b939692955090935050565b60805160a05160c05160e051610bea61015a6000396000818160610152818161073c015281816107ce015261084601526000818160a4015281816104ac0152818161054101528181610608015261068d01526000818160cb01526102cd0152600081816101070152818161021d01528181610344015281816104850152818161056801526106ba0152610bea6000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806320ca3c7f1461005c5780633268cc561461009f5780635bd9e299146100c6578063b98576ca146100ed578063de8b614914610102575b600080fd5b6100837f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b6100837f000000000000000000000000000000000000000000000000000000000000000081565b6100837f000000000000000000000000000000000000000000000000000000000000000081565b6101006100fb366004610958565b610129565b005b6100837f000000000000000000000000000000000000000000000000000000000000000081565b6000826001600160a01b031663d03ecc646040518163ffffffff1660e01b8152600401602060405180830381865afa158015610169573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018d9190610984565b90506000806001600160a01b0316826001600160a01b0316141590506000846001600160a01b0316636fc4eddd6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156101e9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261021191908101906109be565b509050600082610241577f0000000000000000000000000000000000000000000000000000000000000000610243565b815b90506000866001600160a01b0316632ddc7de76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610285573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a99190610a9c565b604051636a16e06160e11b8152600481018290529091506000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063d42dc0c290602401602060405180830381865afa158015610314573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103389190610a9c565b90506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd3330610376600186610acb565b6103818c6002610ae4565b61038b9190610ae4565b6040518463ffffffff1660e01b81526004016103a993929190610afb565b6020604051808303816000875af11580156103c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ec9190610b1f565b5060005b6103fb600183610acb565b81101561093557604051630315311560e31b8152600481018290526000906001600160a01b038b16906318a988a890602401600060405180830381865afa15801561044a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261047291908101906109be565b50905086156105e4576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663095ea7b37f00000000000000000000000000000000000000000000000000000000000000006104d68c6002610ae4565b6040518363ffffffff1660e01b81526004016104f3929190610b41565b6020604051808303816000875af1158015610512573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105369190610b1f565b506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663d5f822807f00000000000000000000000000000000000000000000000000000000000000008a6105938d6002610ae4565b6040518463ffffffff1660e01b81526004016105b193929190610afb565b600060405180830381600087803b1580156105cb57600080fd5b505af11580156105df573d6000803e3d6000fd5b505050505b60405163095ea7b360e01b81526001600160a01b0386169063095ea7b390610632907f0000000000000000000000000000000000000000000000000000000000000000908d90600401610b41565b6020604051808303816000875af1158015610651573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106759190610b1f565b506040516301abf04560e71b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063d5f82280906106e6907f0000000000000000000000000000000000000000000000000000000000000000908e908e90600401610afb565b600060405180830381600087803b15801561070057600080fd5b505af1158015610714573d6000803e3d6000fd5b505060405163095ea7b360e01b81526001600160a01b038416925063095ea7b39150610766907f0000000000000000000000000000000000000000000000000000000000000000908d90600401610b41565b6020604051808303816000875af1158015610785573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a99190610b1f565b5060405163095ea7b360e01b81526001600160a01b0386169063095ea7b3906107f8907f0000000000000000000000000000000000000000000000000000000000000000908d90600401610b41565b6020604051808303816000875af1158015610817573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083b9190610b1f565b506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663e8e3370082878c8080803361087e42610e10610b5a565b60405160e08a901b6001600160e01b03191681526001600160a01b039889166004820152968816602488015260448701959095526064860193909352608485019190915260a484015290921660c482015260e4810191909152610104016060604051808303816000875af11580156108fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091e9190610b6d565b50505050808061092d90610b9b565b9150506103f0565b505050505050505050565b6001600160a01b038116811461095557600080fd5b50565b6000806040838503121561096b57600080fd5b823561097681610940565b946020939093013593505050565b60006020828403121561099657600080fd5b81516109a181610940565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156109d157600080fd5b82516109dc81610940565b8092505060208084015167ffffffffffffffff808211156109fc57600080fd5b818601915086601f830112610a1057600080fd5b815181811115610a2257610a226109a8565b604051601f8201601f19908116603f01168101908382118183101715610a4a57610a4a6109a8565b816040528281528986848701011115610a6257600080fd5b600093505b82841015610a845784840186015181850187015292850192610a67565b60008684830101528096505050505050509250929050565b600060208284031215610aae57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610ade57610ade610ab5565b92915050565b8082028115828204841417610ade57610ade610ab5565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215610b3157600080fd5b815180151581146109a157600080fd5b6001600160a01b03929092168252602082015260400190565b80820180821115610ade57610ade610ab5565b600080600060608486031215610b8257600080fd5b8351925060208401519150604084015190509250925092565b600060018201610bad57610bad610ab5565b506001019056fea26469706673582212201caa4a50432952c69cfae7f1480a317d42cd89bc7518c746b4e7674237eabefa64736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c806320ca3c7f1461005c5780633268cc561461009f5780635bd9e299146100c6578063b98576ca146100ed578063de8b614914610102575b600080fd5b6100837f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b6100837f000000000000000000000000000000000000000000000000000000000000000081565b6100837f000000000000000000000000000000000000000000000000000000000000000081565b6101006100fb366004610958565b610129565b005b6100837f000000000000000000000000000000000000000000000000000000000000000081565b6000826001600160a01b031663d03ecc646040518163ffffffff1660e01b8152600401602060405180830381865afa158015610169573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018d9190610984565b90506000806001600160a01b0316826001600160a01b0316141590506000846001600160a01b0316636fc4eddd6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156101e9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261021191908101906109be565b509050600082610241577f0000000000000000000000000000000000000000000000000000000000000000610243565b815b90506000866001600160a01b0316632ddc7de76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610285573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a99190610a9c565b604051636a16e06160e11b8152600481018290529091506000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063d42dc0c290602401602060405180830381865afa158015610314573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103389190610a9c565b90506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd3330610376600186610acb565b6103818c6002610ae4565b61038b9190610ae4565b6040518463ffffffff1660e01b81526004016103a993929190610afb565b6020604051808303816000875af11580156103c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ec9190610b1f565b5060005b6103fb600183610acb565b81101561093557604051630315311560e31b8152600481018290526000906001600160a01b038b16906318a988a890602401600060405180830381865afa15801561044a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261047291908101906109be565b50905086156105e4576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663095ea7b37f00000000000000000000000000000000000000000000000000000000000000006104d68c6002610ae4565b6040518363ffffffff1660e01b81526004016104f3929190610b41565b6020604051808303816000875af1158015610512573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105369190610b1f565b506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663d5f822807f00000000000000000000000000000000000000000000000000000000000000008a6105938d6002610ae4565b6040518463ffffffff1660e01b81526004016105b193929190610afb565b600060405180830381600087803b1580156105cb57600080fd5b505af11580156105df573d6000803e3d6000fd5b505050505b60405163095ea7b360e01b81526001600160a01b0386169063095ea7b390610632907f0000000000000000000000000000000000000000000000000000000000000000908d90600401610b41565b6020604051808303816000875af1158015610651573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106759190610b1f565b506040516301abf04560e71b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063d5f82280906106e6907f0000000000000000000000000000000000000000000000000000000000000000908e908e90600401610afb565b600060405180830381600087803b15801561070057600080fd5b505af1158015610714573d6000803e3d6000fd5b505060405163095ea7b360e01b81526001600160a01b038416925063095ea7b39150610766907f0000000000000000000000000000000000000000000000000000000000000000908d90600401610b41565b6020604051808303816000875af1158015610785573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a99190610b1f565b5060405163095ea7b360e01b81526001600160a01b0386169063095ea7b3906107f8907f0000000000000000000000000000000000000000000000000000000000000000908d90600401610b41565b6020604051808303816000875af1158015610817573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083b9190610b1f565b506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663e8e3370082878c8080803361087e42610e10610b5a565b60405160e08a901b6001600160e01b03191681526001600160a01b039889166004820152968816602488015260448701959095526064860193909352608485019190915260a484015290921660c482015260e4810191909152610104016060604051808303816000875af11580156108fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091e9190610b6d565b50505050808061092d90610b9b565b9150506103f0565b505050505050505050565b6001600160a01b038116811461095557600080fd5b50565b6000806040838503121561096b57600080fd5b823561097681610940565b946020939093013593505050565b60006020828403121561099657600080fd5b81516109a181610940565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156109d157600080fd5b82516109dc81610940565b8092505060208084015167ffffffffffffffff808211156109fc57600080fd5b818601915086601f830112610a1057600080fd5b815181811115610a2257610a226109a8565b604051601f8201601f19908116603f01168101908382118183101715610a4a57610a4a6109a8565b816040528281528986848701011115610a6257600080fd5b600093505b82841015610a845784840186015181850187015292850192610a67565b60008684830101528096505050505050509250929050565b600060208284031215610aae57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610ade57610ade610ab5565b92915050565b8082028115828204841417610ade57610ade610ab5565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215610b3157600080fd5b815180151581146109a157600080fd5b6001600160a01b03929092168252602082015260400190565b80820180821115610ade57610ade610ab5565b600080600060608486031215610b8257600080fd5b8351925060208401519150604084015190509250925092565b600060018201610bad57610bad610ab5565b506001019056fea26469706673582212201caa4a50432952c69cfae7f1480a317d42cd89bc7518c746b4e7674237eabefa64736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}