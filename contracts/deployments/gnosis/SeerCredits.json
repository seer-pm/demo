{
  "address": "0xEDd48e43EBd4E2b31238a5CBA8FD548fC051aCAF",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governor",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_addresses",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        }
      ],
      "name": "addCreditsBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_creditsManager",
          "type": "address"
        }
      ],
      "name": "changeCreditsManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governor",
          "type": "address"
        }
      ],
      "name": "changeGovernor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creditsManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isAdmin",
          "type": "bool"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_addresses",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        }
      ],
      "name": "setCreditsBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x97ece1a58e5088c3793327c9706e35c7d5da89ab27222f609b4f9e941b60d48e",
  "receipt": {
    "to": null,
    "from": "0x4EDCA105188a0783Ab3A6f09c50567D1E3F8591D",
    "contractAddress": "0xEDd48e43EBd4E2b31238a5CBA8FD548fC051aCAF",
    "transactionIndex": 12,
    "gasUsed": "2360089",
    "logsBloom": "0x
    "blockHash": "0x80543184420e87a1d2f39f18d15a37f3aed51ccdb36218ed12174d596f917265",
    "transactionHash": "0x97ece1a58e5088c3793327c9706e35c7d5da89ab27222f609b4f9e941b60d48e",
    "logs": [],
    "blockNumber": 42439735,
    "cumulativeGasUsed": "6549730",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x4edca105188a0783ab3a6f09c50567d1e3f8591d"
  ],
  "numDeployments": 3,
  "solcInputHash": "7693ac2519ab88153958ebed4942cb22",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"addCreditsBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_creditsManager\",\"type\":\"address\"}],\"name\":\"changeCreditsManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governor\",\"type\":\"address\"}],\"name\":\"changeGovernor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creditsManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isAdmin\",\"type\":\"bool\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"setCreditsBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addCreditsBalance(address[],uint256[])\":{\"details\":\"Add credits balance to multiple addresses by minting tokens.\",\"params\":{\"_addresses\":\"The list of addresses to add credits balance to.\",\"_amounts\":\"The list of amounts to add to each address.\"}},\"changeCreditsManager(address)\":{\"details\":\"Change the credits manager of the contract.\",\"params\":{\"_creditsManager\":\"The address of the new credits manager.\"}},\"changeGovernor(address)\":{\"details\":\"Change the governor of the contract.\",\"params\":{\"_governor\":\"The address of the new governor.\"}},\"constructor\":{\"details\":\"Constructor.\",\"params\":{\"_governor\":\"The trusted governor of the contract.\"}},\"setAdmin(address,bool)\":{\"details\":\"Set admin status for an address.\",\"params\":{\"_admin\":\"The address to set admin status for.\",\"_isAdmin\":\"Boolean indicating whether the address should be an admin.\"}},\"setCreditsBalance(address[],uint256[])\":{\"details\":\"Set credits balance for multiple addresses by minting or burning as needed.\",\"params\":{\"_addresses\":\"The list of addresses to set credits balance for.\",\"_amounts\":\"The list of amounts corresponding to each address.\"}}},\"title\":\"SeerCredits\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"ERC20 token representing trading credits that users can spend on DEX swaps\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/trading-credits/SeerCredits.sol\":\"SeerCredits\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"solmate/src/tokens/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Modern and gas efficient ERC20 + EIP-2612 implementation.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\\nabstract contract ERC20 {\\n    /*//////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            METADATA STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public name;\\n\\n    string public symbol;\\n\\n    uint8 public immutable decimals;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                              ERC20 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 public totalSupply;\\n\\n    mapping(address => uint256) public balanceOf;\\n\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            EIP-2612 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 internal immutable INITIAL_CHAIN_ID;\\n\\n    bytes32 internal immutable INITIAL_DOMAIN_SEPARATOR;\\n\\n    mapping(address => uint256) public nonces;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        uint8 _decimals\\n    ) {\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n\\n        INITIAL_CHAIN_ID = block.chainid;\\n        INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator();\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               ERC20 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\\n        allowance[msg.sender][spender] = amount;\\n\\n        emit Approval(msg.sender, spender, amount);\\n\\n        return true;\\n    }\\n\\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\\n        balanceOf[msg.sender] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(msg.sender, to, amount);\\n\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual returns (bool) {\\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\\n\\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\\n\\n        balanceOf[from] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        return true;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                             EIP-2612 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public virtual {\\n        require(deadline >= block.timestamp, \\\"PERMIT_DEADLINE_EXPIRED\\\");\\n\\n        // Unchecked because the only math done is incrementing\\n        // the owner's nonce which cannot realistically overflow.\\n        unchecked {\\n            address recoveredAddress = ecrecover(\\n                keccak256(\\n                    abi.encodePacked(\\n                        \\\"\\\\x19\\\\x01\\\",\\n                        DOMAIN_SEPARATOR(),\\n                        keccak256(\\n                            abi.encode(\\n                                keccak256(\\n                                    \\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\"\\n                                ),\\n                                owner,\\n                                spender,\\n                                value,\\n                                nonces[owner]++,\\n                                deadline\\n                            )\\n                        )\\n                    )\\n                ),\\n                v,\\n                r,\\n                s\\n            );\\n\\n            require(recoveredAddress != address(0) && recoveredAddress == owner, \\\"INVALID_SIGNER\\\");\\n\\n            allowance[recoveredAddress][spender] = value;\\n        }\\n\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {\\n        return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator();\\n    }\\n\\n    function computeDomainSeparator() internal view virtual returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encode(\\n                    keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"),\\n                    keccak256(bytes(name)),\\n                    keccak256(\\\"1\\\"),\\n                    block.chainid,\\n                    address(this)\\n                )\\n            );\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                        INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 amount) internal virtual {\\n        totalSupply += amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(address(0), to, amount);\\n    }\\n\\n    function _burn(address from, uint256 amount) internal virtual {\\n        balanceOf[from] -= amount;\\n\\n        // Cannot underflow because a user's balance\\n        // will never be larger than the total supply.\\n        unchecked {\\n            totalSupply -= amount;\\n        }\\n\\n        emit Transfer(from, address(0), amount);\\n    }\\n}\\n\",\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\"},\"src/trading-credits/SeerCredits.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.28;\\n\\nimport {ERC20} from \\\"solmate/src/tokens/ERC20.sol\\\";\\n\\n/// @title SeerCredits\\n/// @notice ERC20 token representing trading credits that users can spend on DEX swaps\\ncontract SeerCredits is ERC20 {\\n    address public governor; // The address that can make governance changes to the parameters of the contract.\\n    address public creditsManager; // The address that can burn tokens (CreditsManager contract).\\n    mapping(address => bool) public isAdmin; // Mapping to track admin addresses\\n\\n    modifier onlyGovernor() {\\n        require(msg.sender == governor, \\\"Only governor can call this function\\\");\\n        _;\\n    }\\n\\n    modifier onlyCreditsManager() {\\n        require(msg.sender == creditsManager, \\\"Only credits manager can call this function\\\");\\n        _;\\n    }\\n\\n    modifier onlyAdmin() {\\n        require(isAdmin[msg.sender], \\\"Only admin can call this function\\\");\\n        _;\\n    }\\n\\n    /// @dev Constructor.\\n    /// @param _governor The trusted governor of the contract.\\n    constructor(address _governor) ERC20(\\\"Seer Credits\\\", \\\"SEER_CREDITS\\\", 18) {\\n        governor = _governor;\\n        creditsManager = _governor;\\n        isAdmin[_governor] = true;\\n    }\\n\\n    /// @dev Change the governor of the contract.\\n    /// @param _governor The address of the new governor.\\n    function changeGovernor(address _governor) external onlyGovernor {\\n        require(_governor != address(0), \\\"Invalid governor address\\\");\\n        governor = _governor;\\n    }\\n\\n    /// @dev Change the credits manager of the contract.\\n    /// @param _creditsManager The address of the new credits manager.\\n    function changeCreditsManager(address _creditsManager) external onlyGovernor {\\n        creditsManager = _creditsManager;\\n    }\\n\\n    /// @dev Set admin status for an address.\\n    /// @param _admin The address to set admin status for.\\n    /// @param _isAdmin Boolean indicating whether the address should be an admin.\\n    function setAdmin(address _admin, bool _isAdmin) external onlyGovernor {\\n        require(_admin != address(0), \\\"Invalid admin address\\\");\\n        isAdmin[_admin] = _isAdmin;\\n    }\\n\\n    function mint(address to, uint256 amount) external onlyGovernor {\\n        _mint(to, amount);\\n    }\\n\\n    function burn(address from, uint256 amount) external onlyCreditsManager {\\n        _burn(from, amount);\\n    }\\n\\n\\n    /// @dev Set credits balance for multiple addresses by minting or burning as needed.\\n    /// @param _addresses The list of addresses to set credits balance for.\\n    /// @param _amounts The list of amounts corresponding to each address.\\n    function setCreditsBalance(address[] memory _addresses, uint256[] memory _amounts) external onlyAdmin {\\n        require(_addresses.length == _amounts.length, \\\"Arrays length mismatch\\\");\\n        for (uint256 i; i < _addresses.length; ++i) {\\n            uint256 currentBalance = this.balanceOf(_addresses[i]);\\n            uint256 targetBalance = _amounts[i];\\n            \\n            if (currentBalance > targetBalance) {\\n                // Burn excess tokens\\n                uint256 burnAmount = currentBalance - targetBalance;\\n                _burn(_addresses[i], burnAmount);\\n            } else if (targetBalance > currentBalance) {\\n                // Mint additional tokens\\n                uint256 mintAmount = targetBalance - currentBalance;\\n                _mint(_addresses[i], mintAmount);\\n            }\\n            // If currentBalance == targetBalance, do nothing\\n        }\\n    }\\n\\n    /// @dev Add credits balance to multiple addresses by minting tokens.\\n    /// @param _addresses The list of addresses to add credits balance to.\\n    /// @param _amounts The list of amounts to add to each address.\\n    function addCreditsBalance(address[] memory _addresses, uint256[] memory _amounts) external onlyAdmin {\\n        require(_addresses.length == _amounts.length, \\\"Arrays length mismatch\\\");\\n        for (uint256 i; i < _addresses.length; ++i) {\\n            if (_amounts[i] > 0) {\\n                _mint(_addresses[i], _amounts[i]);\\n            }\\n        }\\n    }\\n}\",\"keccak256\":\"0xbbf9e34771ae3c29750998d870dbb0f0c71b0972057b78c85f3f523de50ded25\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60e060405234801561001057600080fd5b50604051612ecc380380612ecc833981810160405281019061003291906102bd565b6040518060400160405280600c81526020017f53656572204372656469747300000000000000000000000000000000000000008152506040518060400160405280600c81526020017f534545525f435245444954530000000000000000000000000000000000000000815250601282600090816100af919061053a565b5081600190816100bf919061053a565b508060ff1660808160ff16815250504660a081815250506100e46101ce60201b60201c565b60c0818152505050505080600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050610750565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f600060405161020091906106af565b60405180910390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6463060405160200161023f9594939291906106fd565b60405160208183030381529060405280519060200120905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061028a8261025f565b9050919050565b61029a8161027f565b81146102a557600080fd5b50565b6000815190506102b781610291565b92915050565b6000602082840312156102d3576102d261025a565b5b60006102e1848285016102a8565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061036b57607f821691505b60208210810361037e5761037d610324565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026103e67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826103a9565b6103f086836103a9565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061043761043261042d84610408565b610412565b610408565b9050919050565b6000819050919050565b6104518361041c565b61046561045d8261043e565b8484546103b6565b825550505050565b600090565b61047a61046d565b610485818484610448565b505050565b5b818110156104a95761049e600082610472565b60018101905061048b565b5050565b601f8211156104ee576104bf81610384565b6104c884610399565b810160208510156104d7578190505b6104eb6104e385610399565b83018261048a565b50505b505050565b600082821c905092915050565b6000610511600019846008026104f3565b1980831691505092915050565b600061052a8383610500565b9150826002028217905092915050565b610543826102ea565b67ffffffffffffffff81111561055c5761055b6102f5565b5b6105668254610353565b6105718282856104ad565b600060209050601f8311600181146105a45760008415610592578287015190505b61059c858261051e565b865550610604565b601f1984166105b286610384565b60005b828110156105da578489015182556001820191506020850194506020810190506105b5565b868310156105f757848901516105f3601f891682610500565b8355505b6001600288020188555050505b505050505050565b600081905092915050565b60008190508160005260206000209050919050565b6000815461063981610353565b610643818661060c565b9450600182166000811461065e5760018114610673576106a6565b60ff19831686528115158202860193506106a6565b61067c85610617565b60005b8381101561069e5781548189015260018201915060208101905061067f565b838801955050505b50505092915050565b60006106bb828461062c565b915081905092915050565b6000819050919050565b6106d9816106c6565b82525050565b6106e881610408565b82525050565b6106f78161027f565b82525050565b600060a08201905061071260008301886106d0565b61071f60208301876106d0565b61072c60408301866106d0565b61073960608301856106df565b61074660808301846106ee565b9695505050505050565b60805160a05160c05161274d61077f60003960006108e1015260006108ad01526000610887015261274d6000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806370a08231116100b8578063a9059cbb1161007c578063a9059cbb14610379578063aa425cbb146103a9578063d505accf146103c5578063dd62ed3e146103e1578063e4c0aaf414610411578063e60cb4981461042d57610142565b806370a08231146102c35780637ecebe00146102f35780639202c7a01461032357806395d89b411461033f5780639dc29fac1461035d57610142565b806323b872dd1161010a57806323b872dd146101ef57806324d7806c1461021f578063313ce5671461024f5780633644e5151461026d57806340c10f191461028b5780634b0bddd2146102a757610142565b806306fdde0314610147578063095ea7b3146101655780630c340a241461019557806315fa932a146101b357806318160ddd146101d1575b600080fd5b61014f610449565b60405161015c91906118d3565b60405180910390f35b61017f600480360381019061017a919061199d565b6104d7565b60405161018c91906119f8565b60405180910390f35b61019d6105c9565b6040516101aa9190611a22565b60405180910390f35b6101bb6105ef565b6040516101c89190611a22565b60405180910390f35b6101d9610615565b6040516101e69190611a4c565b60405180910390f35b61020960048036038101906102049190611a67565b61061b565b60405161021691906119f8565b60405180910390f35b61023960048036038101906102349190611aba565b610865565b60405161024691906119f8565b60405180910390f35b610257610885565b6040516102649190611b03565b60405180910390f35b6102756108a9565b6040516102829190611b37565b60405180910390f35b6102a560048036038101906102a0919061199d565b610906565b005b6102c160048036038101906102bc9190611b7e565b6109a4565b005b6102dd60048036038101906102d89190611aba565b610afe565b6040516102ea9190611a4c565b60405180910390f35b61030d60048036038101906103089190611aba565b610b16565b60405161031a9190611a4c565b60405180910390f35b61033d60048036038101906103389190611dc9565b610b2e565b005b610347610c7c565b60405161035491906118d3565b60405180910390f35b6103776004803603810190610372919061199d565b610d0a565b005b610393600480360381019061038e919061199d565b610da8565b6040516103a091906119f8565b60405180910390f35b6103c360048036038101906103be9190611dc9565b610ebc565b005b6103df60048036038101906103da9190611e99565b6110e2565b005b6103fb60048036038101906103f69190611f3b565b6113db565b6040516104089190611a4c565b60405180910390f35b61042b60048036038101906104269190611aba565b611400565b005b61044760048036038101906104429190611aba565b611543565b005b6000805461045690611faa565b80601f016020809104026020016040519081016040528092919081815260200182805461048290611faa565b80156104cf5780601f106104a4576101008083540402835291602001916104cf565b820191906000526020600020905b8154815290600101906020018083116104b257829003601f168201915b505050505081565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516105b79190611a4c565b60405180910390a36001905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b600080600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107515782816106d0919061200a565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b82600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107a0919061200a565b9250508190555082600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516108519190611a4c565b60405180910390a360019150509392505050565b60086020528060005260406000206000915054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f000000000000000000000000000000000000000000000000000000000000000046146108df576108da611617565b610901565b7f00000000000000000000000000000000000000000000000000000000000000005b905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610996576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098d906120b0565b60405180910390fd5b6109a082826116a3565b5050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2b906120b0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610aa3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9a9061211c565b60405180910390fd5b80600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60036020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610bba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb1906121ae565b60405180910390fd5b8051825114610bfe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf59061221a565b60405180910390fd5b60005b8251811015610c77576000828281518110610c1f57610c1e61223a565b5b60200260200101511115610c6c57610c6b838281518110610c4357610c4261223a565b5b6020026020010151838381518110610c5e57610c5d61223a565b5b60200260200101516116a3565b5b806001019050610c01565b505050565b60018054610c8990611faa565b80601f0160208091040260200160405190810160405280929190818152602001828054610cb590611faa565b8015610d025780601f10610cd757610100808354040283529160200191610d02565b820191906000526020600020905b815481529060010190602001808311610ce557829003601f168201915b505050505081565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d91906122db565b60405180910390fd5b610da48282611773565b5050565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610df9919061200a565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610eaa9190611a4c565b60405180910390a36001905092915050565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610f48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3f906121ae565b60405180910390fd5b8051825114610f8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f839061221a565b60405180910390fd5b60005b82518110156110dd5760003073ffffffffffffffffffffffffffffffffffffffff166370a08231858481518110610fc957610fc861223a565b5b60200260200101516040518263ffffffff1660e01b8152600401610fed9190611a22565b602060405180830381865afa15801561100a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102e9190612310565b905060008383815181106110455761104461223a565b5b60200260200101519050808211156110915760008183611065919061200a565b905061108b86858151811061107d5761107c61223a565b5b602002602001015182611773565b506110d0565b818111156110cf57600082826110a7919061200a565b90506110cd8685815181106110bf576110be61223a565b5b6020026020010151826116a3565b505b5b5050806001019050610f8f565b505050565b42841015611125576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111c90612389565b60405180910390fd5b600060016111316108a9565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98a8a8a600560008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558b6040516020016111b9969594939291906123a9565b604051602081830303815290604052805190602001206040516020016111e0929190612482565b604051602081830303815290604052805190602001208585856040516000815260200160405260405161121694939291906124b9565b6020604051602081039080840390855afa158015611238573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156112ac57508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b6112eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e29061254a565b60405180910390fd5b85600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925876040516113ca9190611a4c565b60405180910390a350505050505050565b6004602052816000526040600020602052806000526040600020600091509150505481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611490576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611487906120b0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036114ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114f6906125b6565b60405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146115d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ca906120b0565b60405180910390fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516116499190612679565b60405180910390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc64630604051602001611688959493929190612690565b60405160208183030381529060405280519060200120905090565b80600260008282546116b591906126e3565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516117679190611a4c565b60405180910390a35050565b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546117c2919061200a565b9250508190555080600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516118379190611a4c565b60405180910390a35050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561187d578082015181840152602081019050611862565b60008484015250505050565b6000601f19601f8301169050919050565b60006118a582611843565b6118af818561184e565b93506118bf81856020860161185f565b6118c881611889565b840191505092915050565b600060208201905081810360008301526118ed818461189a565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061193482611909565b9050919050565b61194481611929565b811461194f57600080fd5b50565b6000813590506119618161193b565b92915050565b6000819050919050565b61197a81611967565b811461198557600080fd5b50565b60008135905061199781611971565b92915050565b600080604083850312156119b4576119b36118ff565b5b60006119c285828601611952565b92505060206119d385828601611988565b9150509250929050565b60008115159050919050565b6119f2816119dd565b82525050565b6000602082019050611a0d60008301846119e9565b92915050565b611a1c81611929565b82525050565b6000602082019050611a376000830184611a13565b92915050565b611a4681611967565b82525050565b6000602082019050611a616000830184611a3d565b92915050565b600080600060608486031215611a8057611a7f6118ff565b5b6000611a8e86828701611952565b9350506020611a9f86828701611952565b9250506040611ab086828701611988565b9150509250925092565b600060208284031215611ad057611acf6118ff565b5b6000611ade84828501611952565b91505092915050565b600060ff82169050919050565b611afd81611ae7565b82525050565b6000602082019050611b186000830184611af4565b92915050565b6000819050919050565b611b3181611b1e565b82525050565b6000602082019050611b4c6000830184611b28565b92915050565b611b5b816119dd565b8114611b6657600080fd5b50565b600081359050611b7881611b52565b92915050565b60008060408385031215611b9557611b946118ff565b5b6000611ba385828601611952565b9250506020611bb485828601611b69565b9150509250929050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611bfb82611889565b810181811067ffffffffffffffff82111715611c1a57611c19611bc3565b5b80604052505050565b6000611c2d6118f5565b9050611c398282611bf2565b919050565b600067ffffffffffffffff821115611c5957611c58611bc3565b5b602082029050602081019050919050565b600080fd5b6000611c82611c7d84611c3e565b611c23565b90508083825260208201905060208402830185811115611ca557611ca4611c6a565b5b835b81811015611cce5780611cba8882611952565b845260208401935050602081019050611ca7565b5050509392505050565b600082601f830112611ced57611cec611bbe565b5b8135611cfd848260208601611c6f565b91505092915050565b600067ffffffffffffffff821115611d2157611d20611bc3565b5b602082029050602081019050919050565b6000611d45611d4084611d06565b611c23565b90508083825260208201905060208402830185811115611d6857611d67611c6a565b5b835b81811015611d915780611d7d8882611988565b845260208401935050602081019050611d6a565b5050509392505050565b600082601f830112611db057611daf611bbe565b5b8135611dc0848260208601611d32565b91505092915050565b60008060408385031215611de057611ddf6118ff565b5b600083013567ffffffffffffffff811115611dfe57611dfd611904565b5b611e0a85828601611cd8565b925050602083013567ffffffffffffffff811115611e2b57611e2a611904565b5b611e3785828601611d9b565b9150509250929050565b611e4a81611ae7565b8114611e5557600080fd5b50565b600081359050611e6781611e41565b92915050565b611e7681611b1e565b8114611e8157600080fd5b50565b600081359050611e9381611e6d565b92915050565b600080600080600080600060e0888a031215611eb857611eb76118ff565b5b6000611ec68a828b01611952565b9750506020611ed78a828b01611952565b9650506040611ee88a828b01611988565b9550506060611ef98a828b01611988565b9450506080611f0a8a828b01611e58565b93505060a0611f1b8a828b01611e84565b92505060c0611f2c8a828b01611e84565b91505092959891949750929550565b60008060408385031215611f5257611f516118ff565b5b6000611f6085828601611952565b9250506020611f7185828601611952565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611fc257607f821691505b602082108103611fd557611fd4611f7b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061201582611967565b915061202083611967565b925082820390508181111561203857612037611fdb565b5b92915050565b7f4f6e6c7920676f7665726e6f722063616e2063616c6c20746869732066756e6360008201527f74696f6e00000000000000000000000000000000000000000000000000000000602082015250565b600061209a60248361184e565b91506120a58261203e565b604082019050919050565b600060208201905081810360008301526120c98161208d565b9050919050565b7f496e76616c69642061646d696e20616464726573730000000000000000000000600082015250565b600061210660158361184e565b9150612111826120d0565b602082019050919050565b60006020820190508181036000830152612135816120f9565b9050919050565b7f4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f60008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b600061219860218361184e565b91506121a38261213c565b604082019050919050565b600060208201905081810360008301526121c78161218b565b9050919050565b7f417272617973206c656e677468206d69736d6174636800000000000000000000600082015250565b600061220460168361184e565b915061220f826121ce565b602082019050919050565b60006020820190508181036000830152612233816121f7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4f6e6c792063726564697473206d616e616765722063616e2063616c6c20746860008201527f69732066756e6374696f6e000000000000000000000000000000000000000000602082015250565b60006122c5602b8361184e565b91506122d082612269565b604082019050919050565b600060208201905081810360008301526122f4816122b8565b9050919050565b60008151905061230a81611971565b92915050565b600060208284031215612326576123256118ff565b5b6000612334848285016122fb565b91505092915050565b7f5045524d49545f444541444c494e455f45585049524544000000000000000000600082015250565b600061237360178361184e565b915061237e8261233d565b602082019050919050565b600060208201905081810360008301526123a281612366565b9050919050565b600060c0820190506123be6000830189611b28565b6123cb6020830188611a13565b6123d86040830187611a13565b6123e56060830186611a3d565b6123f26080830185611a3d565b6123ff60a0830184611a3d565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b600061244b60028361240a565b915061245682612415565b600282019050919050565b6000819050919050565b61247c61247782611b1e565b612461565b82525050565b600061248d8261243e565b9150612499828561246b565b6020820191506124a9828461246b565b6020820191508190509392505050565b60006080820190506124ce6000830187611b28565b6124db6020830186611af4565b6124e86040830185611b28565b6124f56060830184611b28565b95945050505050565b7f494e56414c49445f5349474e4552000000000000000000000000000000000000600082015250565b6000612534600e8361184e565b915061253f826124fe565b602082019050919050565b6000602082019050818103600083015261256381612527565b9050919050565b7f496e76616c696420676f7665726e6f7220616464726573730000000000000000600082015250565b60006125a060188361184e565b91506125ab8261256a565b602082019050919050565b600060208201905081810360008301526125cf81612593565b9050919050565b600081905092915050565b60008190508160005260206000209050919050565b6000815461260381611faa565b61260d81866125d6565b94506001821660008114612628576001811461263d57612670565b60ff1983168652811515820286019350612670565b612646856125e1565b60005b8381101561266857815481890152600182019150602081019050612649565b838801955050505b50505092915050565b600061268582846125f6565b915081905092915050565b600060a0820190506126a56000830188611b28565b6126b26020830187611b28565b6126bf6040830186611b28565b6126cc6060830185611a3d565b6126d96080830184611a13565b9695505050505050565b60006126ee82611967565b91506126f983611967565b925082820190508082111561271157612710611fdb565b5b9291505056fea2646970667358221220d1646c449ba3dcbd2c1bcc230d497ca6b37b305dd49bcc03107a275d8f9df16b64736f6c634300081c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101425760003560e01c806370a08231116100b8578063a9059cbb1161007c578063a9059cbb14610379578063aa425cbb146103a9578063d505accf146103c5578063dd62ed3e146103e1578063e4c0aaf414610411578063e60cb4981461042d57610142565b806370a08231146102c35780637ecebe00146102f35780639202c7a01461032357806395d89b411461033f5780639dc29fac1461035d57610142565b806323b872dd1161010a57806323b872dd146101ef57806324d7806c1461021f578063313ce5671461024f5780633644e5151461026d57806340c10f191461028b5780634b0bddd2146102a757610142565b806306fdde0314610147578063095ea7b3146101655780630c340a241461019557806315fa932a146101b357806318160ddd146101d1575b600080fd5b61014f610449565b60405161015c91906118d3565b60405180910390f35b61017f600480360381019061017a919061199d565b6104d7565b60405161018c91906119f8565b60405180910390f35b61019d6105c9565b6040516101aa9190611a22565b60405180910390f35b6101bb6105ef565b6040516101c89190611a22565b60405180910390f35b6101d9610615565b6040516101e69190611a4c565b60405180910390f35b61020960048036038101906102049190611a67565b61061b565b60405161021691906119f8565b60405180910390f35b61023960048036038101906102349190611aba565b610865565b60405161024691906119f8565b60405180910390f35b610257610885565b6040516102649190611b03565b60405180910390f35b6102756108a9565b6040516102829190611b37565b60405180910390f35b6102a560048036038101906102a0919061199d565b610906565b005b6102c160048036038101906102bc9190611b7e565b6109a4565b005b6102dd60048036038101906102d89190611aba565b610afe565b6040516102ea9190611a4c565b60405180910390f35b61030d60048036038101906103089190611aba565b610b16565b60405161031a9190611a4c565b60405180910390f35b61033d60048036038101906103389190611dc9565b610b2e565b005b610347610c7c565b60405161035491906118d3565b60405180910390f35b6103776004803603810190610372919061199d565b610d0a565b005b610393600480360381019061038e919061199d565b610da8565b6040516103a091906119f8565b60405180910390f35b6103c360048036038101906103be9190611dc9565b610ebc565b005b6103df60048036038101906103da9190611e99565b6110e2565b005b6103fb60048036038101906103f69190611f3b565b6113db565b6040516104089190611a4c565b60405180910390f35b61042b60048036038101906104269190611aba565b611400565b005b61044760048036038101906104429190611aba565b611543565b005b6000805461045690611faa565b80601f016020809104026020016040519081016040528092919081815260200182805461048290611faa565b80156104cf5780601f106104a4576101008083540402835291602001916104cf565b820191906000526020600020905b8154815290600101906020018083116104b257829003601f168201915b505050505081565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516105b79190611a4c565b60405180910390a36001905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b600080600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107515782816106d0919061200a565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b82600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107a0919061200a565b9250508190555082600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516108519190611a4c565b60405180910390a360019150509392505050565b60086020528060005260406000206000915054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f000000000000000000000000000000000000000000000000000000000000000046146108df576108da611617565b610901565b7f00000000000000000000000000000000000000000000000000000000000000005b905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610996576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098d906120b0565b60405180910390fd5b6109a082826116a3565b5050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2b906120b0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610aa3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9a9061211c565b60405180910390fd5b80600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60036020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610bba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb1906121ae565b60405180910390fd5b8051825114610bfe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf59061221a565b60405180910390fd5b60005b8251811015610c77576000828281518110610c1f57610c1e61223a565b5b60200260200101511115610c6c57610c6b838281518110610c4357610c4261223a565b5b6020026020010151838381518110610c5e57610c5d61223a565b5b60200260200101516116a3565b5b806001019050610c01565b505050565b60018054610c8990611faa565b80601f0160208091040260200160405190810160405280929190818152602001828054610cb590611faa565b8015610d025780601f10610cd757610100808354040283529160200191610d02565b820191906000526020600020905b815481529060010190602001808311610ce557829003601f168201915b505050505081565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d91906122db565b60405180910390fd5b610da48282611773565b5050565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610df9919061200a565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610eaa9190611a4c565b60405180910390a36001905092915050565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610f48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3f906121ae565b60405180910390fd5b8051825114610f8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f839061221a565b60405180910390fd5b60005b82518110156110dd5760003073ffffffffffffffffffffffffffffffffffffffff166370a08231858481518110610fc957610fc861223a565b5b60200260200101516040518263ffffffff1660e01b8152600401610fed9190611a22565b602060405180830381865afa15801561100a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102e9190612310565b905060008383815181106110455761104461223a565b5b60200260200101519050808211156110915760008183611065919061200a565b905061108b86858151811061107d5761107c61223a565b5b602002602001015182611773565b506110d0565b818111156110cf57600082826110a7919061200a565b90506110cd8685815181106110bf576110be61223a565b5b6020026020010151826116a3565b505b5b5050806001019050610f8f565b505050565b42841015611125576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111c90612389565b60405180910390fd5b600060016111316108a9565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98a8a8a600560008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558b6040516020016111b9969594939291906123a9565b604051602081830303815290604052805190602001206040516020016111e0929190612482565b604051602081830303815290604052805190602001208585856040516000815260200160405260405161121694939291906124b9565b6020604051602081039080840390855afa158015611238573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156112ac57508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b6112eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e29061254a565b60405180910390fd5b85600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925876040516113ca9190611a4c565b60405180910390a350505050505050565b6004602052816000526040600020602052806000526040600020600091509150505481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611490576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611487906120b0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036114ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114f6906125b6565b60405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146115d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ca906120b0565b60405180910390fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516116499190612679565b60405180910390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc64630604051602001611688959493929190612690565b60405160208183030381529060405280519060200120905090565b80600260008282546116b591906126e3565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516117679190611a4c565b60405180910390a35050565b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546117c2919061200a565b9250508190555080600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516118379190611a4c565b60405180910390a35050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561187d578082015181840152602081019050611862565b60008484015250505050565b6000601f19601f8301169050919050565b60006118a582611843565b6118af818561184e565b93506118bf81856020860161185f565b6118c881611889565b840191505092915050565b600060208201905081810360008301526118ed818461189a565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061193482611909565b9050919050565b61194481611929565b811461194f57600080fd5b50565b6000813590506119618161193b565b92915050565b6000819050919050565b61197a81611967565b811461198557600080fd5b50565b60008135905061199781611971565b92915050565b600080604083850312156119b4576119b36118ff565b5b60006119c285828601611952565b92505060206119d385828601611988565b9150509250929050565b60008115159050919050565b6119f2816119dd565b82525050565b6000602082019050611a0d60008301846119e9565b92915050565b611a1c81611929565b82525050565b6000602082019050611a376000830184611a13565b92915050565b611a4681611967565b82525050565b6000602082019050611a616000830184611a3d565b92915050565b600080600060608486031215611a8057611a7f6118ff565b5b6000611a8e86828701611952565b9350506020611a9f86828701611952565b9250506040611ab086828701611988565b9150509250925092565b600060208284031215611ad057611acf6118ff565b5b6000611ade84828501611952565b91505092915050565b600060ff82169050919050565b611afd81611ae7565b82525050565b6000602082019050611b186000830184611af4565b92915050565b6000819050919050565b611b3181611b1e565b82525050565b6000602082019050611b4c6000830184611b28565b92915050565b611b5b816119dd565b8114611b6657600080fd5b50565b600081359050611b7881611b52565b92915050565b60008060408385031215611b9557611b946118ff565b5b6000611ba385828601611952565b9250506020611bb485828601611b69565b9150509250929050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611bfb82611889565b810181811067ffffffffffffffff82111715611c1a57611c19611bc3565b5b80604052505050565b6000611c2d6118f5565b9050611c398282611bf2565b919050565b600067ffffffffffffffff821115611c5957611c58611bc3565b5b602082029050602081019050919050565b600080fd5b6000611c82611c7d84611c3e565b611c23565b90508083825260208201905060208402830185811115611ca557611ca4611c6a565b5b835b81811015611cce5780611cba8882611952565b845260208401935050602081019050611ca7565b5050509392505050565b600082601f830112611ced57611cec611bbe565b5b8135611cfd848260208601611c6f565b91505092915050565b600067ffffffffffffffff821115611d2157611d20611bc3565b5b602082029050602081019050919050565b6000611d45611d4084611d06565b611c23565b90508083825260208201905060208402830185811115611d6857611d67611c6a565b5b835b81811015611d915780611d7d8882611988565b845260208401935050602081019050611d6a565b5050509392505050565b600082601f830112611db057611daf611bbe565b5b8135611dc0848260208601611d32565b91505092915050565b60008060408385031215611de057611ddf6118ff565b5b600083013567ffffffffffffffff811115611dfe57611dfd611904565b5b611e0a85828601611cd8565b925050602083013567ffffffffffffffff811115611e2b57611e2a611904565b5b611e3785828601611d9b565b9150509250929050565b611e4a81611ae7565b8114611e5557600080fd5b50565b600081359050611e6781611e41565b92915050565b611e7681611b1e565b8114611e8157600080fd5b50565b600081359050611e9381611e6d565b92915050565b600080600080600080600060e0888a031215611eb857611eb76118ff565b5b6000611ec68a828b01611952565b9750506020611ed78a828b01611952565b9650506040611ee88a828b01611988565b9550506060611ef98a828b01611988565b9450506080611f0a8a828b01611e58565b93505060a0611f1b8a828b01611e84565b92505060c0611f2c8a828b01611e84565b91505092959891949750929550565b60008060408385031215611f5257611f516118ff565b5b6000611f6085828601611952565b9250506020611f7185828601611952565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611fc257607f821691505b602082108103611fd557611fd4611f7b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061201582611967565b915061202083611967565b925082820390508181111561203857612037611fdb565b5b92915050565b7f4f6e6c7920676f7665726e6f722063616e2063616c6c20746869732066756e6360008201527f74696f6e00000000000000000000000000000000000000000000000000000000602082015250565b600061209a60248361184e565b91506120a58261203e565b604082019050919050565b600060208201905081810360008301526120c98161208d565b9050919050565b7f496e76616c69642061646d696e20616464726573730000000000000000000000600082015250565b600061210660158361184e565b9150612111826120d0565b602082019050919050565b60006020820190508181036000830152612135816120f9565b9050919050565b7f4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f60008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b600061219860218361184e565b91506121a38261213c565b604082019050919050565b600060208201905081810360008301526121c78161218b565b9050919050565b7f417272617973206c656e677468206d69736d6174636800000000000000000000600082015250565b600061220460168361184e565b915061220f826121ce565b602082019050919050565b60006020820190508181036000830152612233816121f7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4f6e6c792063726564697473206d616e616765722063616e2063616c6c20746860008201527f69732066756e6374696f6e000000000000000000000000000000000000000000602082015250565b60006122c5602b8361184e565b91506122d082612269565b604082019050919050565b600060208201905081810360008301526122f4816122b8565b9050919050565b60008151905061230a81611971565b92915050565b600060208284031215612326576123256118ff565b5b6000612334848285016122fb565b91505092915050565b7f5045524d49545f444541444c494e455f45585049524544000000000000000000600082015250565b600061237360178361184e565b915061237e8261233d565b602082019050919050565b600060208201905081810360008301526123a281612366565b9050919050565b600060c0820190506123be6000830189611b28565b6123cb6020830188611a13565b6123d86040830187611a13565b6123e56060830186611a3d565b6123f26080830185611a3d565b6123ff60a0830184611a3d565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b600061244b60028361240a565b915061245682612415565b600282019050919050565b6000819050919050565b61247c61247782611b1e565b612461565b82525050565b600061248d8261243e565b9150612499828561246b565b6020820191506124a9828461246b565b6020820191508190509392505050565b60006080820190506124ce6000830187611b28565b6124db6020830186611af4565b6124e86040830185611b28565b6124f56060830184611b28565b95945050505050565b7f494e56414c49445f5349474e4552000000000000000000000000000000000000600082015250565b6000612534600e8361184e565b915061253f826124fe565b602082019050919050565b6000602082019050818103600083015261256381612527565b9050919050565b7f496e76616c696420676f7665726e6f7220616464726573730000000000000000600082015250565b60006125a060188361184e565b91506125ab8261256a565b602082019050919050565b600060208201905081810360008301526125cf81612593565b9050919050565b600081905092915050565b60008190508160005260206000209050919050565b6000815461260381611faa565b61260d81866125d6565b94506001821660008114612628576001811461263d57612670565b60ff1983168652811515820286019350612670565b612646856125e1565b60005b8381101561266857815481890152600182019150602081019050612649565b838801955050505b50505092915050565b600061268582846125f6565b915081905092915050565b600060a0820190506126a56000830188611b28565b6126b26020830187611b28565b6126bf6040830186611b28565b6126cc6060830185611a3d565b6126d96080830184611a13565b9695505050505050565b60006126ee82611967565b91506126f983611967565b925082820190508082111561271157612710611fdb565b5b9291505056fea2646970667358221220d1646c449ba3dcbd2c1bcc230d497ca6b37b305dd49bcc03107a275d8f9df16b64736f6c634300081c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addCreditsBalance(address[],uint256[])": {
        "details": "Add credits balance to multiple addresses by minting tokens.",
        "params": {
          "_addresses": "The list of addresses to add credits balance to.",
          "_amounts": "The list of amounts to add to each address."
        }
      },
      "changeCreditsManager(address)": {
        "details": "Change the credits manager of the contract.",
        "params": {
          "_creditsManager": "The address of the new credits manager."
        }
      },
      "changeGovernor(address)": {
        "details": "Change the governor of the contract.",
        "params": {
          "_governor": "The address of the new governor."
        }
      },
      "constructor": {
        "details": "Constructor.",
        "params": {
          "_governor": "The trusted governor of the contract."
        }
      },
      "setAdmin(address,bool)": {
        "details": "Set admin status for an address.",
        "params": {
          "_admin": "The address to set admin status for.",
          "_isAdmin": "Boolean indicating whether the address should be an admin."
        }
      },
      "setCreditsBalance(address[],uint256[])": {
        "details": "Set credits balance for multiple addresses by minting or burning as needed.",
        "params": {
          "_addresses": "The list of addresses to set credits balance for.",
          "_amounts": "The list of amounts corresponding to each address."
        }
      }
    },
    "title": "SeerCredits",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "ERC20 token representing trading credits that users can spend on DEX swaps",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 20,
        "contract": "src/trading-credits/SeerCredits.sol:SeerCredits",
        "label": "name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 22,
        "contract": "src/trading-credits/SeerCredits.sol:SeerCredits",
        "label": "symbol",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 26,
        "contract": "src/trading-credits/SeerCredits.sol:SeerCredits",
        "label": "totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 30,
        "contract": "src/trading-credits/SeerCredits.sol:SeerCredits",
        "label": "balanceOf",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 36,
        "contract": "src/trading-credits/SeerCredits.sol:SeerCredits",
        "label": "allowance",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 44,
        "contract": "src/trading-credits/SeerCredits.sol:SeerCredits",
        "label": "nonces",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 652,
        "contract": "src/trading-credits/SeerCredits.sol:SeerCredits",
        "label": "governor",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 654,
        "contract": "src/trading-credits/SeerCredits.sol:SeerCredits",
        "label": "creditsManager",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      },
      {
        "astId": 658,
        "contract": "src/trading-credits/SeerCredits.sol:SeerCredits",
        "label": "isAdmin",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}