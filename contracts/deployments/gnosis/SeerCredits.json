{
  "address": "0x3a0D8671eFcBc172eDBE32F91169BBc984dC607C",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governor",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_creditsManager",
          "type": "address"
        }
      ],
      "name": "changeCreditsManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governor",
          "type": "address"
        }
      ],
      "name": "changeGovernor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creditsManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_addresses",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        }
      ],
      "name": "setCreditsBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x259619472b4ecbea52c24564048ed46226eb0f841b9111aad1c7d63165fb762f",
  "receipt": {
    "to": null,
    "from": "0x4EDCA105188a0783Ab3A6f09c50567D1E3F8591D",
    "contractAddress": "0x3a0D8671eFcBc172eDBE32F91169BBc984dC607C",
    "transactionIndex": 7,
    "gasUsed": "2030777",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x19bb09414e217b211ff5d2e44c6517babfc91bb259ddf9b8f3ed6b68208258a3",
    "transactionHash": "0x259619472b4ecbea52c24564048ed46226eb0f841b9111aad1c7d63165fb762f",
    "logs": [],
    "blockNumber": 42332224,
    "cumulativeGasUsed": "11049057",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x4edca105188a0783ab3a6f09c50567d1e3f8591d"
  ],
  "numDeployments": 2,
  "solcInputHash": "2d3de33fa340cf567b57fc3a8edf08f0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_creditsManager\",\"type\":\"address\"}],\"name\":\"changeCreditsManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governor\",\"type\":\"address\"}],\"name\":\"changeGovernor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creditsManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"setCreditsBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"changeCreditsManager(address)\":{\"details\":\"Change the credits manager of the contract.\",\"params\":{\"_creditsManager\":\"The address of the new credits manager.\"}},\"changeGovernor(address)\":{\"details\":\"Change the governor of the contract.\",\"params\":{\"_governor\":\"The address of the new governor.\"}},\"constructor\":{\"details\":\"Constructor.\",\"params\":{\"_governor\":\"The trusted governor of the contract.\"}},\"setCreditsBalance(address[],uint256[])\":{\"details\":\"Set credits balance for multiple addresses by minting or burning as needed.\",\"params\":{\"_addresses\":\"The list of addresses to set credits balance for.\",\"_amounts\":\"The list of amounts corresponding to each address.\"}}},\"title\":\"SeerCredits\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"ERC20 token representing trading credits that users can spend on DEX swaps\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/trading-credits/SeerCredits.sol\":\"SeerCredits\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"solmate/src/tokens/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Modern and gas efficient ERC20 + EIP-2612 implementation.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\\nabstract contract ERC20 {\\n    /*//////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            METADATA STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public name;\\n\\n    string public symbol;\\n\\n    uint8 public immutable decimals;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                              ERC20 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 public totalSupply;\\n\\n    mapping(address => uint256) public balanceOf;\\n\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            EIP-2612 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 internal immutable INITIAL_CHAIN_ID;\\n\\n    bytes32 internal immutable INITIAL_DOMAIN_SEPARATOR;\\n\\n    mapping(address => uint256) public nonces;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        uint8 _decimals\\n    ) {\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n\\n        INITIAL_CHAIN_ID = block.chainid;\\n        INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator();\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               ERC20 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\\n        allowance[msg.sender][spender] = amount;\\n\\n        emit Approval(msg.sender, spender, amount);\\n\\n        return true;\\n    }\\n\\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\\n        balanceOf[msg.sender] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(msg.sender, to, amount);\\n\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual returns (bool) {\\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\\n\\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\\n\\n        balanceOf[from] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        return true;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                             EIP-2612 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public virtual {\\n        require(deadline >= block.timestamp, \\\"PERMIT_DEADLINE_EXPIRED\\\");\\n\\n        // Unchecked because the only math done is incrementing\\n        // the owner's nonce which cannot realistically overflow.\\n        unchecked {\\n            address recoveredAddress = ecrecover(\\n                keccak256(\\n                    abi.encodePacked(\\n                        \\\"\\\\x19\\\\x01\\\",\\n                        DOMAIN_SEPARATOR(),\\n                        keccak256(\\n                            abi.encode(\\n                                keccak256(\\n                                    \\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\"\\n                                ),\\n                                owner,\\n                                spender,\\n                                value,\\n                                nonces[owner]++,\\n                                deadline\\n                            )\\n                        )\\n                    )\\n                ),\\n                v,\\n                r,\\n                s\\n            );\\n\\n            require(recoveredAddress != address(0) && recoveredAddress == owner, \\\"INVALID_SIGNER\\\");\\n\\n            allowance[recoveredAddress][spender] = value;\\n        }\\n\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {\\n        return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator();\\n    }\\n\\n    function computeDomainSeparator() internal view virtual returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encode(\\n                    keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"),\\n                    keccak256(bytes(name)),\\n                    keccak256(\\\"1\\\"),\\n                    block.chainid,\\n                    address(this)\\n                )\\n            );\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                        INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 amount) internal virtual {\\n        totalSupply += amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(address(0), to, amount);\\n    }\\n\\n    function _burn(address from, uint256 amount) internal virtual {\\n        balanceOf[from] -= amount;\\n\\n        // Cannot underflow because a user's balance\\n        // will never be larger than the total supply.\\n        unchecked {\\n            totalSupply -= amount;\\n        }\\n\\n        emit Transfer(from, address(0), amount);\\n    }\\n}\\n\",\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\"},\"src/trading-credits/SeerCredits.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.28;\\n\\nimport {ERC20} from \\\"solmate/src/tokens/ERC20.sol\\\";\\n\\n/// @title SeerCredits\\n/// @notice ERC20 token representing trading credits that users can spend on DEX swaps\\ncontract SeerCredits is ERC20 {\\n    address public governor; // The address that can make governance changes to the parameters of the contract.\\n    address public creditsManager; // The address that can burn tokens (CreditsManager contract).\\n\\n    modifier onlyGovernor() {\\n        require(msg.sender == governor, \\\"Only governor can call this function\\\");\\n        _;\\n    }\\n\\n    modifier onlyCreditsManager() {\\n        require(msg.sender == creditsManager, \\\"Only credits manager can call this function\\\");\\n        _;\\n    }\\n\\n    /// @dev Constructor.\\n    /// @param _governor The trusted governor of the contract.\\n    constructor(address _governor) ERC20(\\\"Seer Credits\\\", \\\"SEER_CREDITS\\\", 18) {\\n        governor = _governor;\\n        creditsManager = _governor;\\n    }\\n\\n    /// @dev Change the governor of the contract.\\n    /// @param _governor The address of the new governor.\\n    function changeGovernor(address _governor) external onlyGovernor {\\n        governor = _governor;\\n    }\\n\\n    /// @dev Change the credits manager of the contract.\\n    /// @param _creditsManager The address of the new credits manager.\\n    function changeCreditsManager(address _creditsManager) external onlyGovernor {\\n        creditsManager = _creditsManager;\\n    }\\n\\n    function mint(address to, uint256 amount) external onlyGovernor {\\n        _mint(to, amount);\\n    }\\n\\n    function burn(address from, uint256 amount) external onlyCreditsManager {\\n        _burn(from, amount);\\n    }\\n\\n\\n    /// @dev Set credits balance for multiple addresses by minting or burning as needed.\\n    /// @param _addresses The list of addresses to set credits balance for.\\n    /// @param _amounts The list of amounts corresponding to each address.\\n    function setCreditsBalance(address[] memory _addresses, uint256[] memory _amounts) external onlyGovernor {\\n        require(_addresses.length == _amounts.length, \\\"Arrays length mismatch\\\");\\n        for (uint256 i; i < _addresses.length; ++i) {\\n            uint256 currentBalance = this.balanceOf(_addresses[i]);\\n            uint256 targetBalance = _amounts[i];\\n            \\n            if (currentBalance > targetBalance) {\\n                // Burn excess tokens\\n                uint256 burnAmount = currentBalance - targetBalance;\\n                _burn(_addresses[i], burnAmount);\\n            } else if (targetBalance > currentBalance) {\\n                // Mint additional tokens\\n                uint256 mintAmount = targetBalance - currentBalance;\\n                _mint(_addresses[i], mintAmount);\\n            }\\n            // If currentBalance == targetBalance, do nothing\\n        }\\n    }\\n}\",\"keccak256\":\"0x37b49e69085a26a612831d01a9e3eb4a6b95e3d5c826626cf46d8e74bc93b17f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60e060405234801561001057600080fd5b506040516128e23803806128e283398181016040528101906100329190610265565b6040518060400160405280600c81526020017f53656572204372656469747300000000000000000000000000000000000000008152506040518060400160405280600c81526020017f534545525f435245444954530000000000000000000000000000000000000000815250601282600090816100af91906104e2565b5081600190816100bf91906104e2565b508060ff1660808160ff16815250504660a081815250506100e461017660201b60201c565b60c0818152505050505080600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506106f8565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516101a89190610657565b60405180910390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc646306040516020016101e79594939291906106a5565b60405160208183030381529060405280519060200120905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061023282610207565b9050919050565b61024281610227565b811461024d57600080fd5b50565b60008151905061025f81610239565b92915050565b60006020828403121561027b5761027a610202565b5b600061028984828501610250565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061031357607f821691505b602082108103610326576103256102cc565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261038e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610351565b6103988683610351565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006103df6103da6103d5846103b0565b6103ba565b6103b0565b9050919050565b6000819050919050565b6103f9836103c4565b61040d610405826103e6565b84845461035e565b825550505050565b600090565b610422610415565b61042d8184846103f0565b505050565b5b818110156104515761044660008261041a565b600181019050610433565b5050565b601f821115610496576104678161032c565b61047084610341565b8101602085101561047f578190505b61049361048b85610341565b830182610432565b50505b505050565b600082821c905092915050565b60006104b96000198460080261049b565b1980831691505092915050565b60006104d283836104a8565b9150826002028217905092915050565b6104eb82610292565b67ffffffffffffffff8111156105045761050361029d565b5b61050e82546102fb565b610519828285610455565b600060209050601f83116001811461054c576000841561053a578287015190505b61054485826104c6565b8655506105ac565b601f19841661055a8661032c565b60005b828110156105825784890151825560018201915060208501945060208101905061055d565b8683101561059f578489015161059b601f8916826104a8565b8355505b6001600288020188555050505b505050505050565b600081905092915050565b60008190508160005260206000209050919050565b600081546105e1816102fb565b6105eb81866105b4565b94506001821660008114610606576001811461061b5761064e565b60ff198316865281151582028601935061064e565b610624856105bf565b60005b8381101561064657815481890152600182019150602081019050610627565b838801955050505b50505092915050565b600061066382846105d4565b915081905092915050565b6000819050919050565b6106818161066e565b82525050565b610690816103b0565b82525050565b61069f81610227565b82525050565b600060a0820190506106ba6000830188610678565b6106c76020830187610678565b6106d46040830186610678565b6106e16060830185610687565b6106ee6080830184610696565b9695505050505050565b60805160a05160c0516121bb610727600039600061083801526000610804015260006107de01526121bb6000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad578063aa425cbb11610071578063aa425cbb14610320578063d505accf1461033c578063dd62ed3e14610358578063e4c0aaf414610388578063e60cb498146103a457610121565b806370a08231146102565780637ecebe001461028657806395d89b41146102b65780639dc29fac146102d4578063a9059cbb146102f057610121565b806318160ddd116100f457806318160ddd146101b057806323b872dd146101ce578063313ce567146101fe5780633644e5151461021c57806340c10f191461023a57610121565b806306fdde0314610126578063095ea7b3146101445780630c340a241461017457806315fa932a14610192575b600080fd5b61012e6103c0565b60405161013b9190611517565b60405180910390f35b61015e600480360381019061015991906115e1565b61044e565b60405161016b919061163c565b60405180910390f35b61017c610540565b6040516101899190611666565b60405180910390f35b61019a610566565b6040516101a79190611666565b60405180910390f35b6101b861058c565b6040516101c59190611690565b60405180910390f35b6101e860048036038101906101e391906116ab565b610592565b6040516101f5919061163c565b60405180910390f35b6102066107dc565b604051610213919061171a565b60405180910390f35b610224610800565b604051610231919061174e565b60405180910390f35b610254600480360381019061024f91906115e1565b61085d565b005b610270600480360381019061026b9190611769565b6108fb565b60405161027d9190611690565b60405180910390f35b6102a0600480360381019061029b9190611769565b610913565b6040516102ad9190611690565b60405180910390f35b6102be61092b565b6040516102cb9190611517565b60405180910390f35b6102ee60048036038101906102e991906115e1565b6109b9565b005b61030a600480360381019061030591906115e1565b610a57565b604051610317919061163c565b60405180910390f35b61033a600480360381019061033591906119a1565b610b6b565b005b61035660048036038101906103519190611a71565b610d95565b005b610372600480360381019061036d9190611b13565b61108e565b60405161037f9190611690565b60405180910390f35b6103a2600480360381019061039d9190611769565b6110b3565b005b6103be60048036038101906103b99190611769565b611187565b005b600080546103cd90611b82565b80601f01602080910402602001604051908101604052809291908181526020018280546103f990611b82565b80156104465780601f1061041b57610100808354040283529160200191610446565b820191906000526020600020905b81548152906001019060200180831161042957829003601f168201915b505050505081565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161052e9190611690565b60405180910390a36001905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b600080600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106c85782816106479190611be2565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b82600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107179190611be2565b9250508190555082600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516107c89190611690565b60405180910390a360019150509392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f000000000000000000000000000000000000000000000000000000000000000046146108365761083161125b565b610858565b7f00000000000000000000000000000000000000000000000000000000000000005b905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e490611c88565b60405180910390fd5b6108f782826112e7565b5050565b60036020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b6001805461093890611b82565b80601f016020809104026020016040519081016040528092919081815260200182805461096490611b82565b80156109b15780601f10610986576101008083540402835291602001916109b1565b820191906000526020600020905b81548152906001019060200180831161099457829003601f168201915b505050505081565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4090611d1a565b60405180910390fd5b610a5382826113b7565b5050565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610aa89190611be2565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b599190611690565b60405180910390a36001905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bfb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf290611c88565b60405180910390fd5b8051825114610c3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3690611d86565b60405180910390fd5b60005b8251811015610d905760003073ffffffffffffffffffffffffffffffffffffffff166370a08231858481518110610c7c57610c7b611da6565b5b60200260200101516040518263ffffffff1660e01b8152600401610ca09190611666565b602060405180830381865afa158015610cbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce19190611dea565b90506000838381518110610cf857610cf7611da6565b5b6020026020010151905080821115610d445760008183610d189190611be2565b9050610d3e868581518110610d3057610d2f611da6565b5b6020026020010151826113b7565b50610d83565b81811115610d825760008282610d5a9190611be2565b9050610d80868581518110610d7257610d71611da6565b5b6020026020010151826112e7565b505b5b5050806001019050610c42565b505050565b42841015610dd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dcf90611e63565b60405180910390fd5b60006001610de4610800565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98a8a8a600560008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558b604051602001610e6c96959493929190611e83565b60405160208183030381529060405280519060200120604051602001610e93929190611f5c565b6040516020818303038152906040528051906020012085858560405160008152602001604052604051610ec99493929190611f93565b6020604051602081039080840390855afa158015610eeb573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610f5f57508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610f9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9590612024565b60405180910390fd5b85600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258760405161107d9190611690565b60405180910390a350505050505050565b6004602052816000526040600020602052806000526040600020600091509150505481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611143576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113a90611c88565b60405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611217576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120e90611c88565b60405180910390fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f600060405161128d91906120e7565b60405180910390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc646306040516020016112cc9594939291906120fe565b60405160208183030381529060405280519060200120905090565b80600260008282546112f99190612151565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516113ab9190611690565b60405180910390a35050565b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546114069190611be2565b9250508190555080600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161147b9190611690565b60405180910390a35050565b600081519050919050565b600082825260208201905092915050565b60005b838110156114c15780820151818401526020810190506114a6565b60008484015250505050565b6000601f19601f8301169050919050565b60006114e982611487565b6114f38185611492565b93506115038185602086016114a3565b61150c816114cd565b840191505092915050565b6000602082019050818103600083015261153181846114de565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006115788261154d565b9050919050565b6115888161156d565b811461159357600080fd5b50565b6000813590506115a58161157f565b92915050565b6000819050919050565b6115be816115ab565b81146115c957600080fd5b50565b6000813590506115db816115b5565b92915050565b600080604083850312156115f8576115f7611543565b5b600061160685828601611596565b9250506020611617858286016115cc565b9150509250929050565b60008115159050919050565b61163681611621565b82525050565b6000602082019050611651600083018461162d565b92915050565b6116608161156d565b82525050565b600060208201905061167b6000830184611657565b92915050565b61168a816115ab565b82525050565b60006020820190506116a56000830184611681565b92915050565b6000806000606084860312156116c4576116c3611543565b5b60006116d286828701611596565b93505060206116e386828701611596565b92505060406116f4868287016115cc565b9150509250925092565b600060ff82169050919050565b611714816116fe565b82525050565b600060208201905061172f600083018461170b565b92915050565b6000819050919050565b61174881611735565b82525050565b6000602082019050611763600083018461173f565b92915050565b60006020828403121561177f5761177e611543565b5b600061178d84828501611596565b91505092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6117d3826114cd565b810181811067ffffffffffffffff821117156117f2576117f161179b565b5b80604052505050565b6000611805611539565b905061181182826117ca565b919050565b600067ffffffffffffffff8211156118315761183061179b565b5b602082029050602081019050919050565b600080fd5b600061185a61185584611816565b6117fb565b9050808382526020820190506020840283018581111561187d5761187c611842565b5b835b818110156118a657806118928882611596565b84526020840193505060208101905061187f565b5050509392505050565b600082601f8301126118c5576118c4611796565b5b81356118d5848260208601611847565b91505092915050565b600067ffffffffffffffff8211156118f9576118f861179b565b5b602082029050602081019050919050565b600061191d611918846118de565b6117fb565b905080838252602082019050602084028301858111156119405761193f611842565b5b835b81811015611969578061195588826115cc565b845260208401935050602081019050611942565b5050509392505050565b600082601f83011261198857611987611796565b5b813561199884826020860161190a565b91505092915050565b600080604083850312156119b8576119b7611543565b5b600083013567ffffffffffffffff8111156119d6576119d5611548565b5b6119e2858286016118b0565b925050602083013567ffffffffffffffff811115611a0357611a02611548565b5b611a0f85828601611973565b9150509250929050565b611a22816116fe565b8114611a2d57600080fd5b50565b600081359050611a3f81611a19565b92915050565b611a4e81611735565b8114611a5957600080fd5b50565b600081359050611a6b81611a45565b92915050565b600080600080600080600060e0888a031215611a9057611a8f611543565b5b6000611a9e8a828b01611596565b9750506020611aaf8a828b01611596565b9650506040611ac08a828b016115cc565b9550506060611ad18a828b016115cc565b9450506080611ae28a828b01611a30565b93505060a0611af38a828b01611a5c565b92505060c0611b048a828b01611a5c565b91505092959891949750929550565b60008060408385031215611b2a57611b29611543565b5b6000611b3885828601611596565b9250506020611b4985828601611596565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611b9a57607f821691505b602082108103611bad57611bac611b53565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611bed826115ab565b9150611bf8836115ab565b9250828203905081811115611c1057611c0f611bb3565b5b92915050565b7f4f6e6c7920676f7665726e6f722063616e2063616c6c20746869732066756e6360008201527f74696f6e00000000000000000000000000000000000000000000000000000000602082015250565b6000611c72602483611492565b9150611c7d82611c16565b604082019050919050565b60006020820190508181036000830152611ca181611c65565b9050919050565b7f4f6e6c792063726564697473206d616e616765722063616e2063616c6c20746860008201527f69732066756e6374696f6e000000000000000000000000000000000000000000602082015250565b6000611d04602b83611492565b9150611d0f82611ca8565b604082019050919050565b60006020820190508181036000830152611d3381611cf7565b9050919050565b7f417272617973206c656e677468206d69736d6174636800000000000000000000600082015250565b6000611d70601683611492565b9150611d7b82611d3a565b602082019050919050565b60006020820190508181036000830152611d9f81611d63565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050611de4816115b5565b92915050565b600060208284031215611e0057611dff611543565b5b6000611e0e84828501611dd5565b91505092915050565b7f5045524d49545f444541444c494e455f45585049524544000000000000000000600082015250565b6000611e4d601783611492565b9150611e5882611e17565b602082019050919050565b60006020820190508181036000830152611e7c81611e40565b9050919050565b600060c082019050611e98600083018961173f565b611ea56020830188611657565b611eb26040830187611657565b611ebf6060830186611681565b611ecc6080830185611681565b611ed960a0830184611681565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000611f25600283611ee4565b9150611f3082611eef565b600282019050919050565b6000819050919050565b611f56611f5182611735565b611f3b565b82525050565b6000611f6782611f18565b9150611f738285611f45565b602082019150611f838284611f45565b6020820191508190509392505050565b6000608082019050611fa8600083018761173f565b611fb5602083018661170b565b611fc2604083018561173f565b611fcf606083018461173f565b95945050505050565b7f494e56414c49445f5349474e4552000000000000000000000000000000000000600082015250565b600061200e600e83611492565b915061201982611fd8565b602082019050919050565b6000602082019050818103600083015261203d81612001565b9050919050565b600081905092915050565b60008190508160005260206000209050919050565b6000815461207181611b82565b61207b8186612044565b9450600182166000811461209657600181146120ab576120de565b60ff19831686528115158202860193506120de565b6120b48561204f565b60005b838110156120d6578154818901526001820191506020810190506120b7565b838801955050505b50505092915050565b60006120f38284612064565b915081905092915050565b600060a082019050612113600083018861173f565b612120602083018761173f565b61212d604083018661173f565b61213a6060830185611681565b6121476080830184611657565b9695505050505050565b600061215c826115ab565b9150612167836115ab565b925082820190508082111561217f5761217e611bb3565b5b9291505056fea2646970667358221220f5c145f96cde2d6b38a0ab3bc709b26a257fda13bcc2ec52a5531cc641c540fd64736f6c634300081c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad578063aa425cbb11610071578063aa425cbb14610320578063d505accf1461033c578063dd62ed3e14610358578063e4c0aaf414610388578063e60cb498146103a457610121565b806370a08231146102565780637ecebe001461028657806395d89b41146102b65780639dc29fac146102d4578063a9059cbb146102f057610121565b806318160ddd116100f457806318160ddd146101b057806323b872dd146101ce578063313ce567146101fe5780633644e5151461021c57806340c10f191461023a57610121565b806306fdde0314610126578063095ea7b3146101445780630c340a241461017457806315fa932a14610192575b600080fd5b61012e6103c0565b60405161013b9190611517565b60405180910390f35b61015e600480360381019061015991906115e1565b61044e565b60405161016b919061163c565b60405180910390f35b61017c610540565b6040516101899190611666565b60405180910390f35b61019a610566565b6040516101a79190611666565b60405180910390f35b6101b861058c565b6040516101c59190611690565b60405180910390f35b6101e860048036038101906101e391906116ab565b610592565b6040516101f5919061163c565b60405180910390f35b6102066107dc565b604051610213919061171a565b60405180910390f35b610224610800565b604051610231919061174e565b60405180910390f35b610254600480360381019061024f91906115e1565b61085d565b005b610270600480360381019061026b9190611769565b6108fb565b60405161027d9190611690565b60405180910390f35b6102a0600480360381019061029b9190611769565b610913565b6040516102ad9190611690565b60405180910390f35b6102be61092b565b6040516102cb9190611517565b60405180910390f35b6102ee60048036038101906102e991906115e1565b6109b9565b005b61030a600480360381019061030591906115e1565b610a57565b604051610317919061163c565b60405180910390f35b61033a600480360381019061033591906119a1565b610b6b565b005b61035660048036038101906103519190611a71565b610d95565b005b610372600480360381019061036d9190611b13565b61108e565b60405161037f9190611690565b60405180910390f35b6103a2600480360381019061039d9190611769565b6110b3565b005b6103be60048036038101906103b99190611769565b611187565b005b600080546103cd90611b82565b80601f01602080910402602001604051908101604052809291908181526020018280546103f990611b82565b80156104465780601f1061041b57610100808354040283529160200191610446565b820191906000526020600020905b81548152906001019060200180831161042957829003601f168201915b505050505081565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161052e9190611690565b60405180910390a36001905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b600080600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106c85782816106479190611be2565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b82600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107179190611be2565b9250508190555082600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516107c89190611690565b60405180910390a360019150509392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f000000000000000000000000000000000000000000000000000000000000000046146108365761083161125b565b610858565b7f00000000000000000000000000000000000000000000000000000000000000005b905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e490611c88565b60405180910390fd5b6108f782826112e7565b5050565b60036020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b6001805461093890611b82565b80601f016020809104026020016040519081016040528092919081815260200182805461096490611b82565b80156109b15780601f10610986576101008083540402835291602001916109b1565b820191906000526020600020905b81548152906001019060200180831161099457829003601f168201915b505050505081565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4090611d1a565b60405180910390fd5b610a5382826113b7565b5050565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610aa89190611be2565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b599190611690565b60405180910390a36001905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bfb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf290611c88565b60405180910390fd5b8051825114610c3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3690611d86565b60405180910390fd5b60005b8251811015610d905760003073ffffffffffffffffffffffffffffffffffffffff166370a08231858481518110610c7c57610c7b611da6565b5b60200260200101516040518263ffffffff1660e01b8152600401610ca09190611666565b602060405180830381865afa158015610cbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce19190611dea565b90506000838381518110610cf857610cf7611da6565b5b6020026020010151905080821115610d445760008183610d189190611be2565b9050610d3e868581518110610d3057610d2f611da6565b5b6020026020010151826113b7565b50610d83565b81811115610d825760008282610d5a9190611be2565b9050610d80868581518110610d7257610d71611da6565b5b6020026020010151826112e7565b505b5b5050806001019050610c42565b505050565b42841015610dd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dcf90611e63565b60405180910390fd5b60006001610de4610800565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98a8a8a600560008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558b604051602001610e6c96959493929190611e83565b60405160208183030381529060405280519060200120604051602001610e93929190611f5c565b6040516020818303038152906040528051906020012085858560405160008152602001604052604051610ec99493929190611f93565b6020604051602081039080840390855afa158015610eeb573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610f5f57508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610f9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9590612024565b60405180910390fd5b85600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258760405161107d9190611690565b60405180910390a350505050505050565b6004602052816000526040600020602052806000526040600020600091509150505481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611143576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113a90611c88565b60405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611217576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120e90611c88565b60405180910390fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f600060405161128d91906120e7565b60405180910390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc646306040516020016112cc9594939291906120fe565b60405160208183030381529060405280519060200120905090565b80600260008282546112f99190612151565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516113ab9190611690565b60405180910390a35050565b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546114069190611be2565b9250508190555080600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161147b9190611690565b60405180910390a35050565b600081519050919050565b600082825260208201905092915050565b60005b838110156114c15780820151818401526020810190506114a6565b60008484015250505050565b6000601f19601f8301169050919050565b60006114e982611487565b6114f38185611492565b93506115038185602086016114a3565b61150c816114cd565b840191505092915050565b6000602082019050818103600083015261153181846114de565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006115788261154d565b9050919050565b6115888161156d565b811461159357600080fd5b50565b6000813590506115a58161157f565b92915050565b6000819050919050565b6115be816115ab565b81146115c957600080fd5b50565b6000813590506115db816115b5565b92915050565b600080604083850312156115f8576115f7611543565b5b600061160685828601611596565b9250506020611617858286016115cc565b9150509250929050565b60008115159050919050565b61163681611621565b82525050565b6000602082019050611651600083018461162d565b92915050565b6116608161156d565b82525050565b600060208201905061167b6000830184611657565b92915050565b61168a816115ab565b82525050565b60006020820190506116a56000830184611681565b92915050565b6000806000606084860312156116c4576116c3611543565b5b60006116d286828701611596565b93505060206116e386828701611596565b92505060406116f4868287016115cc565b9150509250925092565b600060ff82169050919050565b611714816116fe565b82525050565b600060208201905061172f600083018461170b565b92915050565b6000819050919050565b61174881611735565b82525050565b6000602082019050611763600083018461173f565b92915050565b60006020828403121561177f5761177e611543565b5b600061178d84828501611596565b91505092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6117d3826114cd565b810181811067ffffffffffffffff821117156117f2576117f161179b565b5b80604052505050565b6000611805611539565b905061181182826117ca565b919050565b600067ffffffffffffffff8211156118315761183061179b565b5b602082029050602081019050919050565b600080fd5b600061185a61185584611816565b6117fb565b9050808382526020820190506020840283018581111561187d5761187c611842565b5b835b818110156118a657806118928882611596565b84526020840193505060208101905061187f565b5050509392505050565b600082601f8301126118c5576118c4611796565b5b81356118d5848260208601611847565b91505092915050565b600067ffffffffffffffff8211156118f9576118f861179b565b5b602082029050602081019050919050565b600061191d611918846118de565b6117fb565b905080838252602082019050602084028301858111156119405761193f611842565b5b835b81811015611969578061195588826115cc565b845260208401935050602081019050611942565b5050509392505050565b600082601f83011261198857611987611796565b5b813561199884826020860161190a565b91505092915050565b600080604083850312156119b8576119b7611543565b5b600083013567ffffffffffffffff8111156119d6576119d5611548565b5b6119e2858286016118b0565b925050602083013567ffffffffffffffff811115611a0357611a02611548565b5b611a0f85828601611973565b9150509250929050565b611a22816116fe565b8114611a2d57600080fd5b50565b600081359050611a3f81611a19565b92915050565b611a4e81611735565b8114611a5957600080fd5b50565b600081359050611a6b81611a45565b92915050565b600080600080600080600060e0888a031215611a9057611a8f611543565b5b6000611a9e8a828b01611596565b9750506020611aaf8a828b01611596565b9650506040611ac08a828b016115cc565b9550506060611ad18a828b016115cc565b9450506080611ae28a828b01611a30565b93505060a0611af38a828b01611a5c565b92505060c0611b048a828b01611a5c565b91505092959891949750929550565b60008060408385031215611b2a57611b29611543565b5b6000611b3885828601611596565b9250506020611b4985828601611596565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611b9a57607f821691505b602082108103611bad57611bac611b53565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611bed826115ab565b9150611bf8836115ab565b9250828203905081811115611c1057611c0f611bb3565b5b92915050565b7f4f6e6c7920676f7665726e6f722063616e2063616c6c20746869732066756e6360008201527f74696f6e00000000000000000000000000000000000000000000000000000000602082015250565b6000611c72602483611492565b9150611c7d82611c16565b604082019050919050565b60006020820190508181036000830152611ca181611c65565b9050919050565b7f4f6e6c792063726564697473206d616e616765722063616e2063616c6c20746860008201527f69732066756e6374696f6e000000000000000000000000000000000000000000602082015250565b6000611d04602b83611492565b9150611d0f82611ca8565b604082019050919050565b60006020820190508181036000830152611d3381611cf7565b9050919050565b7f417272617973206c656e677468206d69736d6174636800000000000000000000600082015250565b6000611d70601683611492565b9150611d7b82611d3a565b602082019050919050565b60006020820190508181036000830152611d9f81611d63565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050611de4816115b5565b92915050565b600060208284031215611e0057611dff611543565b5b6000611e0e84828501611dd5565b91505092915050565b7f5045524d49545f444541444c494e455f45585049524544000000000000000000600082015250565b6000611e4d601783611492565b9150611e5882611e17565b602082019050919050565b60006020820190508181036000830152611e7c81611e40565b9050919050565b600060c082019050611e98600083018961173f565b611ea56020830188611657565b611eb26040830187611657565b611ebf6060830186611681565b611ecc6080830185611681565b611ed960a0830184611681565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000611f25600283611ee4565b9150611f3082611eef565b600282019050919050565b6000819050919050565b611f56611f5182611735565b611f3b565b82525050565b6000611f6782611f18565b9150611f738285611f45565b602082019150611f838284611f45565b6020820191508190509392505050565b6000608082019050611fa8600083018761173f565b611fb5602083018661170b565b611fc2604083018561173f565b611fcf606083018461173f565b95945050505050565b7f494e56414c49445f5349474e4552000000000000000000000000000000000000600082015250565b600061200e600e83611492565b915061201982611fd8565b602082019050919050565b6000602082019050818103600083015261203d81612001565b9050919050565b600081905092915050565b60008190508160005260206000209050919050565b6000815461207181611b82565b61207b8186612044565b9450600182166000811461209657600181146120ab576120de565b60ff19831686528115158202860193506120de565b6120b48561204f565b60005b838110156120d6578154818901526001820191506020810190506120b7565b838801955050505b50505092915050565b60006120f38284612064565b915081905092915050565b600060a082019050612113600083018861173f565b612120602083018761173f565b61212d604083018661173f565b61213a6060830185611681565b6121476080830184611657565b9695505050505050565b600061215c826115ab565b9150612167836115ab565b925082820190508082111561217f5761217e611bb3565b5b9291505056fea2646970667358221220f5c145f96cde2d6b38a0ab3bc709b26a257fda13bcc2ec52a5531cc641c540fd64736f6c634300081c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "changeCreditsManager(address)": {
        "details": "Change the credits manager of the contract.",
        "params": {
          "_creditsManager": "The address of the new credits manager."
        }
      },
      "changeGovernor(address)": {
        "details": "Change the governor of the contract.",
        "params": {
          "_governor": "The address of the new governor."
        }
      },
      "constructor": {
        "details": "Constructor.",
        "params": {
          "_governor": "The trusted governor of the contract."
        }
      },
      "setCreditsBalance(address[],uint256[])": {
        "details": "Set credits balance for multiple addresses by minting or burning as needed.",
        "params": {
          "_addresses": "The list of addresses to set credits balance for.",
          "_amounts": "The list of amounts corresponding to each address."
        }
      }
    },
    "title": "SeerCredits",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "ERC20 token representing trading credits that users can spend on DEX swaps",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 20,
        "contract": "src/trading-credits/SeerCredits.sol:SeerCredits",
        "label": "name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 22,
        "contract": "src/trading-credits/SeerCredits.sol:SeerCredits",
        "label": "symbol",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 26,
        "contract": "src/trading-credits/SeerCredits.sol:SeerCredits",
        "label": "totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 30,
        "contract": "src/trading-credits/SeerCredits.sol:SeerCredits",
        "label": "balanceOf",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 36,
        "contract": "src/trading-credits/SeerCredits.sol:SeerCredits",
        "label": "allowance",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 44,
        "contract": "src/trading-credits/SeerCredits.sol:SeerCredits",
        "label": "nonces",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 652,
        "contract": "src/trading-credits/SeerCredits.sol:SeerCredits",
        "label": "governor",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 654,
        "contract": "src/trading-credits/SeerCredits.sol:SeerCredits",
        "label": "creditsManager",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}